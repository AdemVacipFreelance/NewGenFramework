‚
IE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IAnswerService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IAnswerService #
{		 
List

 
<

 
Answer

 
>

 
GetAll

 
(

 
)

 
;

 
Answer 
GetById 
( 
int 
answerId #
)# $
;$ %
List 
< 
Answer 
> 
GetByAnswer  
(  !
int! $
answerId% -
)- .
;. /
Answer 
Add 
( 
Answer 
answer  
)  !
;! "
void 
Update 
( 
Answer 
answer !
)! "
;" #
void 
Delete 
( 
Answer 
answer !
)! "
;" #
} 
} ”
HE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IBrandService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IBrandService "
{		 
List

 
<

 
Brand

 
>

 
GetAll

 
(

 
)

 
;

 
Brand 
GetById 
( 
int 
brandId !
)! "
;" #
List 
< 
Brand 
> 

GetByBrand 
( 
int "
brandId# *
)* +
;+ ,
Brand 
Add 
( 
Brand 
brand 
) 
; 
void 
Update 
( 
Brand 
brand 
)  
;  !
void 
Delete 
( 
Brand 
brand 
)  
;  !
} 
} µ
FE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IBuyService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IBuyService  
{		 
List

 
<

 
Buy

 
>

 
GetAll

 
(

 
)

 
;

 
Buy 
GetById 
( 
int 
buyId 
) 
; 
List 
< 
Buy 
> 
GetByBuy 
( 
int 
buyId $
)$ %
;% &
Buy 
Add 
( 
Buy 
buy 
) 
; 
void 
Update 
( 
Buy 
buy 
) 
; 
void 
Delete 
( 
Buy 
buy 
) 
; 
} 
} Ä	
KE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\ICampaignService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
ICampaignService %
{		 
List

 
<

 
Campaign

 
>

 
GetAll

 
(

 
)

 
;

  
Campaign 
GetById 
( 
int 

campaignId '
)' (
;( )
List 
< 
Campaign 
> 
GetByCampaign $
($ %
int% (

campaignId) 3
)3 4
;4 5
Campaign 
Add 
( 
Campaign 
campaign &
)& '
;' (
void 
Update 
( 
Campaign 
campaign %
)% &
;& '
void 
Delete 
( 
Campaign 
campaign %
)% &
;& '
} 
} Ä	
KE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\ICategoryService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
ICategoryService %
{		 
List

 
<

 
Category

 
>

 
GetAll

 
(

 
)

 
;

  
Category 
GetById 
( 
int 

categoryId '
)' (
;( )
List 
< 
Category 
> 
GetByCategory $
($ %
int% (

categoryId) 3
)3 4
;4 5
Category 
Add 
( 
Category 
category &
)& '
;' (
void 
Update 
( 
Category 
category %
)% &
;& '
void 
Delete 
( 
Category 
category %
)% &
;& '
} 
} ƒ
GE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\ICityService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
ICityService !
{		 
List

 
<

 
City

 
>

 
GetAll

 
(

 
)

 
;

 
City 
GetById 
( 
int 
cityId 
)  
;  !
List 
< 
City 
> 
	GetByCity 
( 
int  
cityId! '
)' (
;( )
City 
Add 
( 
City 
city 
) 
; 
void 
Update 
( 
City 
city 
) 
; 
void 
Delete 
( 
City 
city 
) 
; 
} 
} Ä	
KE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\ICustomerService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
ICustomerService %
{		 
List

 
<

 
Customer

 
>

 
GetAll

 
(

 
)

 
;

  
Customer 
GetById 
( 
int 

customerId '
)' (
;( )
List 
< 
Customer 
> 
GetByCustomer $
($ %
int% (

customerId) 3
)3 4
;4 5
Customer 
Add 
( 
Customer 
customer &
)& '
;' (
void 
Update 
( 
Customer 
customer %
)% &
;& '
void 
Delete 
( 
Customer 
customer %
)% &
;& '
} 
} ï	
GE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IGiftService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IGiftService !
{		 
List

 
<

 
Gift

 
>

 
GetAll

 
(

 
string

  
includeColumns

! /
=

0 1
null

2 6
)

6 7
;

7 8
Gift 
GetById 
( 
int 
giftId 
)  
;  !
List 
< 
Gift 
> 
	GetByGift 
( 
int  
giftId! '
)' (
;( )
Gift 
Add 
( 
Gift 
gift 
) 
; 
void 
Update 
( 
Gift 
gift 
) 
; 
void 
Delete 
( 
Gift 
gift 
) 
; 
} 
} è	
LE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IGN_ReportService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IGN_ReportService &
{ 
List 
< 
	GN_Report 
> 
GetAll 
( 
)  
;  !
	GN_Report 
GetById 
( 
int 
gN_ReportId )
)) *
;* +
List		 
<		 
	GN_Report		 
>		 
GetByGN_Report		 &
(		& '
int		' *
gN_ReportId		+ 6
)		6 7
;		7 8
	GN_Report

 
Add

 
(

 
	GN_Report

 
	gN_Report

  )
)

) *
;

* +
void 
Update 
( 
	GN_Report 
	gN_Report '
)' (
;( )
void 
Delete 
( 
	GN_Report 
	gN_Report '
)' (
;( )
} 
} À	
PE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IKnowledgeTestService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface !
IKnowledgeTestService *
{		 
List

 
<

 
KnowledgeTest

 
>

 
GetAll

 "
(

" #
)

# $
;

$ %
KnowledgeTest 
GetById 
( 
int !
knowledgeTestId" 1
)1 2
;2 3
List 
< 
KnowledgeTest 
> 
GetByKnowledgeTest .
(. /
int/ 2
knowledgeTestId3 B
)B C
;C D
KnowledgeTest 
Add 
( 
KnowledgeTest '
knowledgeTest( 5
)5 6
;6 7
void 
Update 
( 
KnowledgeTest !
knowledgeTest" /
)/ 0
;0 1
void 
Delete 
( 
KnowledgeTest !
knowledgeTest" /
)/ 0
;0 1
} 
} ˙	
KE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\ILanguageService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
ILanguageService %
{		 
List

 
<

 	
Language

	 
>

 
GetAll

 
(

 
)

 
;

 
Language 
GetById 
( 
int 

languageId %
)% &
;& '
List 

<
 
Language 
> 
GetByLanguage "
(" #
int# &

languageId' 1
)1 2
;2 3
Language 
Add 
( 
Language 
language $
)$ %
;% &
void 

Update 
( 
Language 
language #
)# $
;$ %
void 

Delete 
( 
Language 
language #
)# $
;$ %
Language 
Get 
( 
string 
code 
) 
;  
} 
} ÿ
OE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\ILanguageWordService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface  
ILanguageWordService )
{		 
List

 
<

 	
LanguageWord

	 
>

 
GetAll

 
(

 
)

 
;

  
List 

<
 
LanguageWord 
> 
GetByLanguage &
(& '
int' *

languageId+ 5
)5 6
;6 7
LanguageWord 
GetValue 
( 
int 

languageId  *
,* +
string, 2
code3 7
)7 8
;8 9
LanguageWord 
Add 
( 
LanguageWord #
languageWord$ 0
)0 1
;1 2
} 
} ”
HE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IMyNewService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IMyNewService "
{		 
List

 
<

 
MyNew

 
>

 
GetAll

 
(

 
)

 
;

 
MyNew 
GetById 
( 
int 
myNewId !
)! "
;" #
List 
< 
MyNew 
> 

GetByMyNew 
( 
int "
myNewId# *
)* +
;+ ,
MyNew 
Add 
( 
MyNew 
myNew 
) 
; 
void 
Update 
( 
MyNew 
myNew 
)  
;  !
void 
Delete 
( 
MyNew 
myNew 
)  
;  !
} 
} è	
LE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IMyProductService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IMyProductService &
{		 
List

 
<

 
	MyProduct

 
>

 
GetAll

 
(

 
)

  
;

  !
	MyProduct 
GetById 
( 
int 
myProductId )
)) *
;* +
List 
< 
	MyProduct 
> 
GetByMyProduct &
(& '
int' *
myProductId+ 6
)6 7
;7 8
	MyProduct 
Add 
( 
	MyProduct 
	myProduct  )
)) *
;* +
void 
Update 
( 
	MyProduct 
	myProduct '
)' (
;( )
void 
Delete 
( 
	MyProduct 
	myProduct '
)' (
;( )
} 
} Ò
JE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IProductService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IProductService $
{		 
List

 
<

 
Product

 
>

 
GetAll

 
(

 
)

 
;

 
Product 
GetById 
( 
int 
	productId %
)% &
;& '
List 
< 
Product 
> 
GetByProduct "
(" #
int# &
	productId' 0
)0 1
;1 2
Product 
Add 
( 
Product 
product #
)# $
;$ %
void 
Update 
( 
Product 
product #
)# $
;$ %
void 
Delete 
( 
Product 
product #
)# $
;$ %
} 
} ¯	
SE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IRelationalPersonService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface $
IRelationalPersonService -
{		 
List

 
<

 
RelationalPerson

 
>

 
GetAll

 %
(

% &
)

& '
;

' (
RelationalPerson 
GetById  
(  !
int! $
relationalPersonId% 7
)7 8
;8 9
List 
< 
RelationalPerson 
> !
GetByRelationalPerson 4
(4 5
int5 8
relationalPersonId9 K
)K L
;L M
RelationalPerson 
Add 
( 
RelationalPerson -
relationalPerson. >
)> ?
;? @
void 
Update 
( 
RelationalPerson $
relationalPerson% 5
)5 6
;6 7
void 
Delete 
( 
RelationalPerson $
relationalPerson% 5
)5 6
;6 7
} 
} ƒ
GE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IRoleService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IRoleService !
{		 
List

 
<

 
Role

 
>

 
GetAll

 
(

 
)

 
;

 
Role 
GetById 
( 
int 
roleId 
)  
;  !
List 
< 
Role 
> 
	GetByRole 
( 
int  
roleId! '
)' (
;( )
Role 
Add 
( 
Role 
role 
) 
; 
void 
Update 
( 
Role 
role 
) 
; 
void 
Delete 
( 
Role 
role 
) 
; 
} 
} ƒ
GE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\ISaleService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
ISaleService !
{		 
List

 
<

 
Sale

 
>

 
GetAll

 
(

 
)

 
;

 
Sale 
GetById 
( 
int 
saleId 
)  
;  !
List 
< 
Sale 
> 
	GetBySale 
( 
int  
saleId! '
)' (
;( )
Sale 
Add 
( 
Sale 
sale 
) 
; 
void 
Update 
( 
Sale 
sale 
) 
; 
void 
Delete 
( 
Sale 
sale 
) 
; 
} 
} ”
HE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IScoreService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IScoreService "
{		 
List

 
<

 
Score

 
>

 
GetAll

 
(

 
)

 
;

 
Score 
GetById 
( 
int 
scoreId !
)! "
;" #
List 
< 
Score 
> 

GetByScore 
( 
int "
scoreId# *
)* +
;+ ,
Score 
Add 
( 
Score 
score 
) 
; 
void 
Update 
( 
Score 
score 
)  
;  !
void 
Delete 
( 
Score 
score 
)  
;  !
} 
} ‚
IE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\ISellerService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
ISellerService #
{		 
List

 
<

 
Seller

 
>

 
GetAll

 
(

 
)

 
;

 
Seller 
GetById 
( 
int 
sellerId #
)# $
;$ %
List 
< 
Seller 
> 
GetBySeller  
(  !
int! $
sellerId% -
)- .
;. /
Seller 
Add 
( 
Seller 
seller  
)  !
;! "
void 
Update 
( 
Seller 
seller !
)! "
;" #
void 
Delete 
( 
Seller 
seller !
)! "
;" #
} 
} Ä	
KE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IUnitTypeService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IUnitTypeService %
{		 
List

 
<

 
UnitType

 
>

 
GetAll

 
(

 
)

 
;

  
UnitType 
GetById 
( 
int 

unitTypeId '
)' (
;( )
List 
< 
UnitType 
> 
GetByUnitType $
($ %
int% (

unitTypeId) 3
)3 4
;4 5
UnitType 
Add 
( 
UnitType 
unitType &
)& '
;' (
void 
Update 
( 
UnitType 
unitType %
)% &
;& '
void 
Delete 
( 
UnitType 
unitType %
)% &
;& '
} 
} Ä	
KE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IUserRoleService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IUserRoleService %
{		 
List

 
<

 
UserRole

 
>

 
GetAll

 
(

 
)

 
;

  
UserRole 
GetById 
( 
int 

userRoleId '
)' (
;( )
List 
< 
UserRole 
> 
GetByUserRole $
($ %
int% (

userRoleId) 3
)3 4
;4 5
UserRole 
Add 
( 
UserRole 
userRole &
)& '
;' (
void 
Update 
( 
UserRole 
userRole %
)% &
;& '
void 
Delete 
( 
UserRole 
userRole %
)% &
;& '
} 
} ≈
GE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IUserService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public		 
	interface			 
IUserService		 
{

 
User $
GetByUserNameAndPassword	 !
(! "
string" (
userName) 1
,1 2
string3 9
password: B
)B C
;C D
List 
< 	
User	 
> 
GetAll 
( 
) 
; 
User 
GetById	 
( 
int 
userId 
) 
; 
List 
< 	
User	 
> 
	GetByUser 
( 
int 
userId #
)# $
;$ %
List 
< 	
UserRoleItem	 
> 
GetUserRoles #
(# $
User$ (
user) -
)- .
;. /
User 
Add	 
( 
User 
user 
) 
; 
void 
Update	 
( 
User 
user 
) 
; 
void 
Delete	 
( 
User 
user 
) 
; 
User 
UniqueUserName	 
( 
string 
userName '
)' (
;( )
User 
UniqueEmail	 
( 
string 
email !
)! "
;" #
} 
} Ä	
KE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IUserTypeService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface 
IUserTypeService %
{		 
List

 
<

 
UserType

 
>

 
GetAll

 
(

 
)

 
;

  
UserType 
GetById 
( 
int 

userTypeId '
)' (
;( )
List 
< 
UserType 
> 
GetByUserType $
($ %
int% (

userTypeId) 3
)3 4
;4 5
UserType 
Add 
( 
UserType 
userType &
)& '
;' (
void 
Update 
( 
UserType 
userType %
)% &
;& '
void 
Delete 
( 
UserType 
userType %
)% &
;& '
} 
} ‰
RE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Abstract\IvwRP_StockCountService.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Abstract $
{ 
public 

	interface #
IvwRP_StockCountService ,
{ 
List		 
<		 
vwRP_StockCount		 
>		 
StockCounts		 )
(		) *
)		* +
;		+ ,
}

 
} π
QE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\AnswerManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
AnswerManager 
:  
ManagerBase! ,
,, -
IAnswerService. <
{ 
private 

IAnswerDal 

_answerDal %
;% &
public 
AnswerManager 
( 

IAnswerDal '
	answerDal( 1
)1 2
{ 	

_answerDal 
= 
	answerDal "
;" #
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Answer 
> 
GetAll "
(" #
)# $
{ 	
return 

_answerDal 
. 
GetList %
(% &
)& '
;' (
} 	
public!! 
Answer!! 
GetById!! 
(!! 
int!! !
answerId!!" *
)!!* +
{"" 	
return## 

_answerDal## 
.## 
Get## !
(##! "
u##" #
=>##$ &
u##' (
.##( )
AnswerId##) 1
==##2 4
answerId##5 =
)##= >
;##> ?
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Answer(( 
Add(( 
((( 
Answer((  
answer((! '
)((' (
{)) 	
return** 

_answerDal** 
.** 
Add** !
(**! "
answer**" (
)**( )
;**) *
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Answer.. !
answer.." (
)..( )
{// 	

_answerDal00 
.00 
Update00 
(00  
answer00  &
)00& '
;00' (
}11 	
public33 
void33 
Delete33 
(33 
Answer33 !
answer33" (
)33( )
{44 	

_answerDal55 
.55 
Delete55 
(55 
answer55 $
)55$ %
;55% &
}66 	
public88 
List88 
<88 
Answer88 
>88 
GetByAnswer88 '
(88' (
int88( +
answerId88, 4
)884 5
{99 	
return:: 

_answerDal:: 
.:: 
GetList:: %
(::% &
filter::& ,
:::, -
t::. /
=>::0 2
t::3 4
.::4 5
AnswerId::5 =
==::> @
answerId::A I
)::I J
.::J K
ToList::K Q
(::Q R
)::R S
;::S T
};; 	
}<< 
}== ´
PE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\BrandManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
BrandManager 
: 
ManagerBase  +
,+ ,
IBrandService- :
{ 
private 
readonly 
	IBrandDal "
	_brandDal# ,
;, -
public 
BrandManager 
( 
	IBrandDal %
brandDal& .
). /
{ 	
	_brandDal 
= 
brandDal  
;  !
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Brand 
> 
GetAll !
(! "
)" #
{ 	
return 
	_brandDal 
. 
GetList $
($ %
)% &
;& '
} 	
public!! 
Brand!! 
GetById!! 
(!! 
int!!  
brandId!!! (
)!!( )
{"" 	
return## 
	_brandDal## 
.## 
Get##  
(##  !
u##! "
=>### %
u##& '
.##' (
BrandId##( /
==##0 2
brandId##3 :
)##: ;
;##; <
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Brand(( 
Add(( 
((( 
Brand(( 
brand(( $
)(($ %
{)) 	
return** 
	_brandDal** 
.** 
Add**  
(**  !
brand**! &
)**& '
;**' (
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Brand..  
brand..! &
)..& '
{// 	
	_brandDal00 
.00 
Update00 
(00 
brand00 $
)00$ %
;00% &
}11 	
public33 
void33 
Delete33 
(33 
Brand33  
brand33! &
)33& '
{44 	
	_brandDal55 
.55 
Delete55 
(55 
brand55 "
)55" #
;55# $
}66 	
public88 
List88 
<88 
Brand88 
>88 

GetByBrand88 %
(88% &
int88& )
brandId88* 1
)881 2
{99 	
return:: 
	_brandDal:: 
.:: 
GetList:: $
(::$ %
filter::% +
:::+ ,
t::- .
=>::/ 1
t::2 3
.::3 4
BrandId::4 ;
==::< >
brandId::? F
)::F G
.::G H
ToList::H N
(::N O
)::O P
;::P Q
};; 	
}<< 
}== Õ
NE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\BuyManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 

BuyManager 
: 
ManagerBase )
,) *
IBuyService+ 6
{ 
private 
IBuyDal 
_buyDal 
;  
public 

BuyManager 
( 
IBuyDal !
buyDal" (
)( )
{ 	
_buyDal 
= 
buyDal 
; 
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Buy 
> 
GetAll 
(  
)  !
{ 	
return 
_buyDal 
. 
GetList "
(" #
)# $
;$ %
} 	
public!! 
Buy!! 
GetById!! 
(!! 
int!! 
buyId!! $
)!!$ %
{"" 	
return## 
_buyDal## 
.## 
Get## 
(## 
u##  
=>##! #
u##$ %
.##% &
BuyId##& +
==##, .
buyId##/ 4
)##4 5
;##5 6
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Buy(( 
Add(( 
((( 
Buy(( 
buy(( 
)(( 
{)) 	
return** 
_buyDal** 
.** 
Add** 
(** 
buy** "
)**" #
;**# $
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Buy.. 
buy.. "
).." #
{// 	
_buyDal00 
.00 
Update00 
(00 
buy00  
)00  !
;00! "
}11 	
public33 
void33 
Delete33 
(33 
Buy33 
buy33 "
)33" #
{44 	
_buyDal55 
.55 
Delete55 
(55 
buy55 
)55 
;55  
}66 	
public88 
List88 
<88 
Buy88 
>88 
GetByBuy88 !
(88! "
int88" %
buyId88& +
)88+ ,
{99 	
return:: 
_buyDal:: 
.:: 
GetList:: "
(::" #
filter::# )
:::) *
t::+ ,
=>::- /
t::0 1
.::1 2
BuyId::2 7
==::8 :
buyId::; @
)::@ A
.::A B
ToList::B H
(::H I
)::I J
;::J K
};; 	
}<< 
}== Å
SE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\CampaignManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
CampaignManager  
:! "
ManagerBase# .
,. /
ICampaignService0 @
{ 
private 
ICampaignDal 
_campaignDal )
;) *
public 
CampaignManager 
( 
ICampaignDal +
campaignDal, 7
)7 8
{ 	
_campaignDal 
= 
campaignDal &
;& '
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Campaign 
> 
GetAll $
($ %
)% &
{ 	
return 
_campaignDal 
.  
GetList  '
(' (
)( )
;) *
} 	
public!! 
Campaign!! 
GetById!! 
(!!  
int!!  #

campaignId!!$ .
)!!. /
{"" 	
return## 
_campaignDal## 
.##  
Get##  #
(### $
u##$ %
=>##& (
u##) *
.##* +

CampaignId##+ 5
==##6 8

campaignId##9 C
)##C D
;##D E
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Campaign(( 
Add(( 
((( 
Campaign(( $
campaign((% -
)((- .
{)) 	
return** 
_campaignDal** 
.**  
Add**  #
(**# $
campaign**$ ,
)**, -
;**- .
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Campaign.. #
campaign..$ ,
).., -
{// 	
_campaignDal00 
.00 
Update00 !
(00! "
campaign00" *
)00* +
;00+ ,
}11 	
public33 
void33 
Delete33 
(33 
Campaign33 #
campaign33$ ,
)33, -
{44 	
_campaignDal55 
.55 
Delete55 
(55  
campaign55  (
)55( )
;55) *
}66 	
public88 
List88 
<88 
Campaign88 
>88 
GetByCampaign88 +
(88+ ,
int88, /

campaignId880 :
)88: ;
{99 	
return:: 
_campaignDal:: 
.::  
GetList::  '
(::' (
filter::( .
:::. /
t::0 1
=>::2 4
t::5 6
.::6 7

CampaignId::7 A
==::B D

campaignId::E O
)::O P
.::P Q
ToList::Q W
(::W X
)::X Y
;::Y Z
};; 	
}<< 
}== Å
SE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\CategoryManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
CategoryManager  
:! "
ManagerBase# .
,. /
ICategoryService0 @
{ 
private 
ICategoryDal 
_categoryDal )
;) *
public 
CategoryManager 
( 
ICategoryDal +
categoryDal, 7
)7 8
{ 	
_categoryDal 
= 
categoryDal &
;& '
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Category 
> 
GetAll $
($ %
)% &
{ 	
return 
_categoryDal 
.  
GetList  '
(' (
)( )
;) *
} 	
public!! 
Category!! 
GetById!! 
(!!  
int!!  #

categoryId!!$ .
)!!. /
{"" 	
return## 
_categoryDal## 
.##  
Get##  #
(### $
u##$ %
=>##& (
u##) *
.##* +

CategoryId##+ 5
==##6 8

categoryId##9 C
)##C D
;##D E
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Category(( 
Add(( 
((( 
Category(( $
category((% -
)((- .
{)) 	
return** 
_categoryDal** 
.**  
Add**  #
(**# $
category**$ ,
)**, -
;**- .
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Category.. #
category..$ ,
).., -
{// 	
_categoryDal00 
.00 
Update00 !
(00! "
category00" *
)00* +
;00+ ,
}11 	
public33 
void33 
Delete33 
(33 
Category33 #
category33$ ,
)33, -
{44 	
_categoryDal55 
.55 
Delete55 
(55  
category55  (
)55( )
;55) *
}66 	
public88 
List88 
<88 
Category88 
>88 
GetByCategory88 +
(88+ ,
int88, /

categoryId880 :
)88: ;
{99 	
return:: 
_categoryDal:: 
.::  
GetList::  '
(::' (
filter::( .
:::. /
t::0 1
=>::2 4
t::5 6
.::6 7

CategoryId::7 A
==::B D

categoryId::E O
)::O P
.::P Q
ToList::Q W
(::W X
)::X Y
;::Y Z
};; 	
}<< 
}== Ò
OE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\CityManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
CityManager 
: 
ManagerBase *
,* +
ICityService, 8
{ 
private 
ICityDal 
_cityDal !
;! "
public 
CityManager 
( 
ICityDal #
cityDal$ +
)+ ,
{ 	
_cityDal 
= 
cityDal 
; 
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
City 
> 
GetAll  
(  !
)! "
{ 	
return 
_cityDal 
. 
GetList #
(# $
)$ %
;% &
} 	
public!! 
City!! 
GetById!! 
(!! 
int!! 
cityId!!  &
)!!& '
{"" 	
return## 
_cityDal## 
.## 
Get## 
(##  
u##  !
=>##" $
u##% &
.##& '
CityId##' -
==##. 0
cityId##1 7
)##7 8
;##8 9
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
City(( 
Add(( 
((( 
City(( 
city(( !
)((! "
{)) 	
return** 
_cityDal** 
.** 
Add** 
(**  
city**  $
)**$ %
;**% &
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
City.. 
city..  $
)..$ %
{// 	
_cityDal00 
.00 
Update00 
(00 
city00 "
)00" #
;00# $
}11 	
public33 
void33 
Delete33 
(33 
City33 
city33  $
)33$ %
{44 	
_cityDal55 
.55 
Delete55 
(55 
city55  
)55  !
;55! "
}66 	
public88 
List88 
<88 
City88 
>88 
	GetByCity88 #
(88# $
int88$ '
cityId88( .
)88. /
{99 	
return:: 
_cityDal:: 
.:: 
GetList:: #
(::# $
filter::$ *
:::* +
t::, -
=>::. 0
t::1 2
.::2 3
CityId::3 9
==::: <
cityId::= C
)::C D
.::D E
ToList::E K
(::K L
)::L M
;::M N
};; 	
}<< 
}== Å
SE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\CustomerManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
CustomerManager  
:! "
ManagerBase# .
,. /
ICustomerService0 @
{ 
private 
ICustomerDal 
_customerDal )
;) *
public 
CustomerManager 
( 
ICustomerDal +
customerDal, 7
)7 8
{ 	
_customerDal 
= 
customerDal &
;& '
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Customer 
> 
GetAll $
($ %
)% &
{ 	
return 
_customerDal 
.  
GetList  '
(' (
)( )
;) *
} 	
public!! 
Customer!! 
GetById!! 
(!!  
int!!  #

customerId!!$ .
)!!. /
{"" 	
return## 
_customerDal## 
.##  
Get##  #
(### $
u##$ %
=>##& (
u##) *
.##* +

CustomerId##+ 5
==##6 8

customerId##9 C
)##C D
;##D E
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Customer(( 
Add(( 
((( 
Customer(( $
customer((% -
)((- .
{)) 	
return** 
_customerDal** 
.**  
Add**  #
(**# $
customer**$ ,
)**, -
;**- .
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Customer.. #
customer..$ ,
).., -
{// 	
_customerDal00 
.00 
Update00 !
(00! "
customer00" *
)00* +
;00+ ,
}11 	
public33 
void33 
Delete33 
(33 
Customer33 #
customer33$ ,
)33, -
{44 	
_customerDal55 
.55 
Delete55 
(55  
customer55  (
)55( )
;55) *
}66 	
public88 
List88 
<88 
Customer88 
>88 
GetByCustomer88 +
(88+ ,
int88, /

customerId880 :
)88: ;
{99 	
return:: 
_customerDal:: 
.::  
GetList::  '
(::' (
filter::( .
:::. /
t::0 1
=>::2 4
t::5 6
.::6 7

CustomerId::7 A
==::B D

customerId::E O
)::O P
.::P Q
ToList::Q W
(::W X
)::X Y
;::Y Z
};; 	
}<< 
}== ˇ
OE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\GiftManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
GiftManager 
: 
ManagerBase *
,* +
IGiftService, 8
{ 
private 
IGiftDal 
_giftDal !
;! "
public 
GiftManager 
( 
IGiftDal #
giftDal$ +
)+ ,
{ 	
_giftDal 
= 
giftDal 
; 
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Gift 
> 
GetAll  
(  !
string! '
includeColumns( 6
=7 8
null9 =
)= >
{ 	
return 
_giftDal 
. 
GetList #
(# $
null$ (
,( )
includeColumns* 8
)8 9
;9 :
} 	
public!! 
Gift!! 
GetById!! 
(!! 
int!! 
giftId!!  &
)!!& '
{"" 	
return## 
_giftDal## 
.## 
Get## 
(##  
u##  !
=>##" $
u##% &
.##& '
GiftId##' -
==##. 0
giftId##1 7
)##7 8
;##8 9
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Gift(( 
Add(( 
((( 
Gift(( 
gift(( !
)((! "
{)) 	
return** 
_giftDal** 
.** 
Add** 
(**  
gift**  $
)**$ %
;**% &
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Gift.. 
gift..  $
)..$ %
{// 	
_giftDal00 
.00 
Update00 
(00 
gift00 "
)00" #
;00# $
}11 	
public33 
void33 
Delete33 
(33 
Gift33 
gift33  $
)33$ %
{44 	
_giftDal55 
.55 
Delete55 
(55 
gift55  
)55  !
;55! "
}66 	
public88 
List88 
<88 
Gift88 
>88 
	GetByGift88 #
(88# $
int88$ '
giftId88( .
)88. /
{99 	
return:: 
_giftDal:: 
.:: 
GetList:: #
(::# $
filter::$ *
:::* +
t::, -
=>::. 0
t::1 2
.::2 3
GiftId::3 9
==::: <
giftId::= C
)::C D
.::D E
ToList::E K
(::K L
)::L M
;::M N
};; 	
}<< 
}== ü
TE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\GN_ReportManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
GN_ReportManager !
:" #
ManagerBase$ /
,/ 0
IGN_ReportService1 B
{ 
private 
IGN_ReportDal 
_gN_ReportDal +
;+ ,
public 
GN_ReportManager 
(  
IGN_ReportDal  -
gN_ReportDal. :
): ;
{ 	
_gN_ReportDal 
= 
gN_ReportDal (
;( )
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
	GN_Report 
> 
GetAll %
(% &
)& '
{ 	
return 
_gN_ReportDal  
.  !
GetList! (
(( )
)) *
;* +
} 	
public!! 
	GN_Report!! 
GetById!!  
(!!  !
int!!! $
gN_ReportId!!% 0
)!!0 1
{"" 	
return## 
_gN_ReportDal##  
.##  !
Get##! $
(##$ %
u##% &
=>##' )
u##* +
.##+ ,
ReportId##, 4
==##5 7
gN_ReportId##8 C
)##C D
;##D E
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
	GN_Report(( 
Add(( 
((( 
	GN_Report(( &
	gN_Report((' 0
)((0 1
{)) 	
return** 
_gN_ReportDal**  
.**  !
Add**! $
(**$ %
	gN_Report**% .
)**. /
;**/ 0
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
	GN_Report.. $
	gN_Report..% .
)... /
{// 	
_gN_ReportDal00 
.00 
Update00 "
(00" #
	gN_Report00# ,
)00, -
;00- .
}11 	
public33 
void33 
Delete33 
(33 
	GN_Report33 $
	gN_Report33% .
)33. /
{44 	
_gN_ReportDal55 
.55 
Delete55  
(55  !
	gN_Report55! *
)55* +
;55+ ,
}66 	
public88 
List88 
<88 
	GN_Report88 
>88 
GetByGN_Report88 -
(88- .
int88. 1
gN_ReportId882 =
)88= >
{99 	
return:: 
_gN_ReportDal::  
.::  !
GetList::! (
(::( )
filter::) /
:::/ 0
t::1 2
=>::3 5
t::6 7
.::7 8
ReportId::8 @
==::A C
gN_ReportId::D O
)::O P
.::P Q
ToList::Q W
(::W X
)::X Y
;::Y Z
};; 	
}<< 
}== µ
XE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\KnowledgeTestManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class  
KnowledgeTestManager %
:& '
ManagerBase( 3
,3 4!
IKnowledgeTestService5 J
{ 
private 
IKnowledgeTestDal !
_knowledgeTestDal" 3
;3 4
public  
KnowledgeTestManager #
(# $
IKnowledgeTestDal$ 5
knowledgeTestDal6 F
)F G
{ 	
_knowledgeTestDal 
= 
knowledgeTestDal  0
;0 1
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
KnowledgeTest !
>! "
GetAll# )
() *
)* +
{ 	
return 
_knowledgeTestDal $
.$ %
GetList% ,
(, -
)- .
;. /
} 	
public!! 
KnowledgeTest!! 
GetById!! $
(!!$ %
int!!% (
knowledgeTestId!!) 8
)!!8 9
{"" 	
return## 
_knowledgeTestDal## $
.##$ %
Get##% (
(##( )
u##) *
=>##+ -
u##. /
.##/ 0
KnowledgeTestId##0 ?
==##@ B
knowledgeTestId##C R
)##R S
;##S T
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
KnowledgeTest(( 
Add((  
(((  !
KnowledgeTest((! .
knowledgeTest((/ <
)((< =
{)) 	
return** 
_knowledgeTestDal** $
.**$ %
Add**% (
(**( )
knowledgeTest**) 6
)**6 7
;**7 8
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
KnowledgeTest.. (
knowledgeTest..) 6
)..6 7
{// 	
_knowledgeTestDal00 
.00  
Update00  &
(00& '
knowledgeTest00' 4
)004 5
;005 6
}11 	
public33 
void33 
Delete33 
(33 
KnowledgeTest33 (
knowledgeTest33) 6
)336 7
{44 	
_knowledgeTestDal55 
.55 
Delete55 $
(55$ %
knowledgeTest55% 2
)552 3
;553 4
}66 	
public88 
List88 
<88 
KnowledgeTest88 !
>88! "
GetByKnowledgeTest88# 5
(885 6
int886 9
knowledgeTestId88: I
)88I J
{99 	
return:: 
_knowledgeTestDal:: $
.::$ %
GetList::% ,
(::, -
filter::- 3
:::3 4
t::5 6
=>::7 9
t::: ;
.::; <
KnowledgeTestId::< K
==::L N
knowledgeTestId::O ^
)::^ _
.::_ `
ToList::` f
(::f g
)::g h
;::h i
};; 	
}<< 
}== Æ
SE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\LanguageManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
LanguageManager  
:! "
ManagerBase# .
,. /
ILanguageService0 @
{ 
private 
ILanguageDal 
_languageDal %
;% &
public 
LanguageManager 
( 
ILanguageDal )
languageDal* 5
)5 6
{ 
_languageDal 
= 
languageDal "
;" #
} 
[ 
CacheAspect 
( 
typeof 
( 
MemoryCacheManager ,
), -
)- .
]. /
public 
List 
< 
Language 
> 
GetAll "
(" #
)# $
{ 
return 
_languageDal 
. 
GetList #
(# $
)$ %
;% &
} 
public!! 
Language!! 
GetById!! 
(!! 
int!! !

languageId!!" ,
)!!, -
{"" 
return## 
_languageDal## 
.## 
Get## 
(##  
u##  !
=>##" $
u##% &
.##& '

LanguageId##' 1
==##2 4

languageId##5 ?
)##? @
;##@ A
}$$ 
['' 
CacheRemoveAspect'' 
('' 
typeof'' 
(''  
MemoryCacheManager''  2
)''2 3
)''3 4
]''4 5
public(( 
Language(( 
Add(( 
((( 
Language(( "
language((# +
)((+ ,
{)) 
return** 
_languageDal** 
.** 
Add** 
(**  
language**  (
)**( )
;**) *
}++ 
[-- 
CacheRemoveAspect-- 
(-- 
typeof-- 
(--  
MemoryCacheManager--  2
)--2 3
)--3 4
]--4 5
public.. 
void.. 
Update.. 
(.. 
Language.. !
language.." *
)..* +
{// 
_languageDal00 
.00 
Update00 
(00 
language00 $
)00$ %
;00% &
}11 
public33 
void33 
Delete33 
(33 
Language33 !
language33" *
)33* +
{44 
_languageDal55 
.55 
Delete55 
(55 
language55 $
)55$ %
;55% &
}66 
public88 
Language88 
Get88 
(88 
string88  
code88! %
)88% &
{99 
return:: 
GetAll:: 
(:: 
):: 
.:: 
SingleOrDefault:: '
(::' (
t::( )
=>::* ,
t::- .
.::. /
Code::/ 3
==::4 6
code::7 ;
)::; <
;::< =
};; 
public== 
List== 
<== 
Language== 
>== 
GetByLanguage== )
(==) *
int==* -

languageId==. 8
)==8 9
{>> 
return?? 
_languageDal?? 
.?? 
GetList?? #
(??# $
filter??$ *
:??* +
t??, -
=>??. 0
t??1 2
.??2 3

LanguageId??3 =
==??> @

languageId??A K
)??K L
.??L M
ToList??M S
(??S T
)??T U
;??U V
}@@ 
}AA 
}BB Ü
WE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\LanguageWordManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 
class	 
LanguageWordManager "
:# $
ManagerBase% 0
,0 1 
ILanguageWordService2 F
{ 
private 
readonly 
ILanguageWordDal %
_languageWordDal& 6
;6 7
private 
readonly 
IMapper 
_mapper $
;$ %
public 

LanguageWordManager 
( 
ILanguageWordDal /
languageWordDal0 ?
,? @
IMapperA H
mapperI O
)O P
{ 
_languageWordDal 
= 
languageWordDal (
;( )
_mapper 
= 
mapper 
; 
} 
[ 
CacheAspect 
( 
typeof 
( 
MemoryCacheManager *
)* +
)+ ,
], -
public 

List 
< 
LanguageWord 
> 
GetAll $
($ %
)% &
{ 
var   	
languageWords  
 
=   
_mapper   !
.  ! "
Map  " %
<  % &
List  & *
<  * +
LanguageWord  + 7
>  7 8
>  8 9
(  9 :
_languageWordDal  : J
.  J K
GetList  K R
(  R S
)  S T
)  T U
;  U V
return!! 
languageWords!! 
;!! 
}"" 
[$$ 
CacheAspect$$ 
($$ 
typeof$$ 
($$ 
MemoryCacheManager$$ *
)$$* +
)$$+ ,
]$$, -
public%% 

List%% 
<%% 
LanguageWord%% 
>%% 
GetByLanguage%% +
(%%+ ,
int%%, /
dilId%%0 5
)%%5 6
{&& 
var'' 	
getByLanguageWords''
 
='' 
_mapper'' &
.''& '
Map''' *
<''* +
List''+ /
<''/ 0
LanguageWord''0 <
>''< =
>''= >
(''> ?
_languageWordDal''? O
.''O P
GetList''P W
(''W X
filter''X ^
:''^ _
t''` a
=>''b d
t''e f
.''f g

LanguageId''g q
==''r t
dilId''u z
)''z {
)''{ |
;''| }
return(( 
getByLanguageWords(( 
;((  
})) 
[++ 
CacheAspect++ 
(++ 
typeof++ 
(++ 
MemoryCacheManager++ *
)++* +
)+++ ,
]++, -
public,, 

LanguageWord,, 
GetValue,,  
(,,  !
int,,! $
dilId,,% *
,,,* +
string,,, 2
kod,,3 6
),,6 7
{-- 
return.. 
GetByLanguage.. 
(.. 
dilId..  
)..  !
...! "
FirstOrDefault.." 0
(..0 1
t..1 2
=>..3 5
t..6 7
...7 8
Code..8 <
==..= ?
kod..@ C
)..C D
;..D E
}// 
[11 
CacheRemoveAspect11 
(11 
typeof11 
(11 
MemoryCacheManager11 0
)110 1
)111 2
]112 3
public22 

LanguageWord22 
Add22 
(22 
LanguageWord22 (
languageWord22) 5
)225 6
{33 
return44 
_languageWordDal44 
.44 
Add44 !
(44! "
languageWord44" .
)44. /
;44/ 0
}55 
}66 
}77 ì
PE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\MyNewManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
MyNewManager 
: 
ManagerBase  +
,+ ,
IMyNewService- :
{ 
private 
	IMyNewDal 
	_myNewDal #
;# $
public 
MyNewManager 
( 
	IMyNewDal %
myNewDal& .
). /
{ 	
	_myNewDal 
= 
myNewDal  
;  !
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
MyNew 
> 
GetAll !
(! "
)" #
{ 	
return 
	_myNewDal 
. 
GetList $
($ %
)% &
;& '
} 	
public!! 
MyNew!! 
GetById!! 
(!! 
int!!  
myNewId!!! (
)!!( )
{"" 	
return## 
	_myNewDal## 
.## 
Get##  
(##  !
u##! "
=>### %
u##& '
.##' (
NewsId##( .
==##/ 1
myNewId##2 9
)##9 :
;##: ;
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
MyNew(( 
Add(( 
((( 
MyNew(( 
myNew(( $
)(($ %
{)) 	
return** 
	_myNewDal** 
.** 
Add**  
(**  !
myNew**! &
)**& '
;**' (
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
MyNew..  
myNew..! &
)..& '
{// 	
	_myNewDal00 
.00 
Update00 
(00 
myNew00 $
)00$ %
;00% &
}11 	
public33 
void33 
Delete33 
(33 
MyNew33  
myNew33! &
)33& '
{44 	
	_myNewDal55 
.55 
Delete55 
(55 
myNew55 "
)55" #
;55# $
}66 	
public88 
List88 
<88 
MyNew88 
>88 

GetByMyNew88 %
(88% &
int88& )
myNewId88* 1
)881 2
{99 	
return:: 
	_myNewDal:: 
.:: 
GetList:: $
(::$ %
filter::% +
:::+ ,
t::- .
=>::/ 1
t::2 3
.::3 4
NewsId::4 :
==::; =
myNewId::> E
)::E F
.::F G
ToList::G M
(::M N
)::N O
;::O P
};; 	
}<< 
}== •
TE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\MyProductManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
MyProductManager !
:" #
ManagerBase$ /
,/ 0
IMyProductService1 B
{ 
private 
IMyProductDal 
_myProductDal +
;+ ,
public 
MyProductManager 
(  
IMyProductDal  -
myProductDal. :
): ;
{ 	
_myProductDal 
= 
myProductDal (
;( )
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
	MyProduct 
> 
GetAll %
(% &
)& '
{ 	
return 
_myProductDal  
.  !
GetList! (
(( )
)) *
;* +
} 	
public!! 
	MyProduct!! 
GetById!!  
(!!  !
int!!! $
myProductId!!% 0
)!!0 1
{"" 	
return## 
_myProductDal##  
.##  !
Get##! $
(##$ %
u##% &
=>##' )
u##* +
.##+ ,
MyProductId##, 7
==##8 :
myProductId##; F
)##F G
;##G H
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
	MyProduct(( 
Add(( 
((( 
	MyProduct(( &
	myProduct((' 0
)((0 1
{)) 	
return** 
_myProductDal**  
.**  !
Add**! $
(**$ %
	myProduct**% .
)**. /
;**/ 0
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
	MyProduct.. $
	myProduct..% .
)... /
{// 	
_myProductDal00 
.00 
Update00 "
(00" #
	myProduct00# ,
)00, -
;00- .
}11 	
public33 
void33 
Delete33 
(33 
	MyProduct33 $
	myProduct33% .
)33. /
{44 	
_myProductDal55 
.55 
Delete55  
(55  !
	myProduct55! *
)55* +
;55+ ,
}66 	
public88 
List88 
<88 
	MyProduct88 
>88 
GetByMyProduct88 -
(88- .
int88. 1
myProductId882 =
)88= >
{99 	
return:: 
_myProductDal::  
.::  !
GetList::! (
(::( )
filter::) /
:::/ 0
t::1 2
=>::3 5
t::6 7
.::7 8
MyProductId::8 C
==::D F
myProductId::G R
)::R S
.::S T
ToList::T Z
(::Z [
)::[ \
;::\ ]
};; 	
}<< 
}== ›
RE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\ProductManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
ProductManager 
:  !
ManagerBase" -
,- .
IProductService/ >
{ 
private 
IProductDal 
_productDal '
;' (
public 
ProductManager 
( 
IProductDal )

productDal* 4
)4 5
{ 	
_productDal 
= 

productDal $
;$ %
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Product 
> 
GetAll #
(# $
)$ %
{ 	
return 
_productDal 
. 
GetList &
(& '
)' (
;( )
} 	
public!! 
Product!! 
GetById!! 
(!! 
int!! "
	productId!!# ,
)!!, -
{"" 	
return## 
_productDal## 
.## 
Get## "
(##" #
u### $
=>##% '
u##( )
.##) *
	ProductId##* 3
==##4 6
	productId##7 @
)##@ A
;##A B
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Product(( 
Add(( 
((( 
Product(( "
product((# *
)((* +
{)) 	
return** 
_productDal** 
.** 
Add** "
(**" #
product**# *
)*** +
;**+ ,
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Product.. "
product..# *
)..* +
{// 	
_productDal00 
.00 
Update00  
(00  !
product00! (
)00( )
;00) *
}11 	
public33 
void33 
Delete33 
(33 
Product33 "
product33# *
)33* +
{44 	
_productDal55 
.55 
Delete55 
(55 
product55 &
)55& '
;55' (
}66 	
public88 
List88 
<88 
Product88 
>88 
GetByProduct88 )
(88) *
int88* -
	productId88. 7
)887 8
{99 	
return:: 
_productDal:: 
.:: 
GetList:: &
(::& '
filter::' -
:::- .
t::/ 0
=>::1 3
t::4 5
.::5 6
	ProductId::6 ?
==::@ B
	productId::C L
)::L M
.::M N
ToList::N T
(::T U
)::U V
;::V W
};; 	
}<< 
}== °
[E:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\RelationalPersonManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class #
RelationalPersonManager (
:) *
ManagerBase+ 6
,6 7$
IRelationalPersonService8 P
{ 
private  
IRelationalPersonDal $ 
_relationalPersonDal% 9
;9 :
public #
RelationalPersonManager &
(& ' 
IRelationalPersonDal' ;
relationalPersonDal< O
)O P
{ 	 
_relationalPersonDal  
=! "
relationalPersonDal# 6
;6 7
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
RelationalPerson $
>$ %
GetAll& ,
(, -
)- .
{ 	
return  
_relationalPersonDal '
.' (
GetList( /
(/ 0
)0 1
;1 2
} 	
public!! 
RelationalPerson!! 
GetById!!  '
(!!' (
int!!( +
relationalPersonId!!, >
)!!> ?
{"" 	
return##  
_relationalPersonDal## '
.##' (
Get##( +
(##+ ,
u##, -
=>##. 0
u##1 2
.##2 3
RelationalPersonId##3 E
==##F H
relationalPersonId##I [
)##[ \
;##\ ]
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
RelationalPerson(( 
Add((  #
(((# $
RelationalPerson(($ 4
relationalPerson((5 E
)((E F
{)) 	
return**  
_relationalPersonDal** '
.**' (
Add**( +
(**+ ,
relationalPerson**, <
)**< =
;**= >
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
RelationalPerson.. +
relationalPerson.., <
)..< =
{// 	 
_relationalPersonDal00 "
.00" #
Update00# )
(00) *
relationalPerson00* :
)00: ;
;00; <
}11 	
public33 
void33 
Delete33 
(33 
RelationalPerson33 +
relationalPerson33, <
)33< =
{44 	 
_relationalPersonDal55  
.55  !
Delete55! '
(55' (
relationalPerson55( 8
)558 9
;559 :
}66 	
public88 
List88 
<88 
RelationalPerson88 $
>88$ %!
GetByRelationalPerson88& ;
(88; <
int88< ?
relationalPersonId88@ R
)88R S
{99 	
return::  
_relationalPersonDal:: '
.::' (
GetList::( /
(::/ 0
filter::0 6
:::6 7
t::8 9
=>::: <
t::= >
.::> ?
RelationalPersonId::? Q
==::R T
relationalPersonId::U g
)::g h
.::h i
ToList::i o
(::o p
)::p q
;::q r
};; 	
}<< 
}== Ò
OE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\RoleManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
RoleManager 
: 
ManagerBase *
,* +
IRoleService, 8
{ 
private 
IRoleDal 
_roleDal !
;! "
public 
RoleManager 
( 
IRoleDal #
roleDal$ +
)+ ,
{ 	
_roleDal 
= 
roleDal 
; 
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Role 
> 
GetAll  
(  !
)! "
{ 	
return 
_roleDal 
. 
GetList #
(# $
)$ %
;% &
} 	
public!! 
Role!! 
GetById!! 
(!! 
int!! 
roleId!!  &
)!!& '
{"" 	
return## 
_roleDal## 
.## 
Get## 
(##  
u##  !
=>##" $
u##% &
.##& '
RoleId##' -
==##. 0
roleId##1 7
)##7 8
;##8 9
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Role(( 
Add(( 
((( 
Role(( 
role(( !
)((! "
{)) 	
return** 
_roleDal** 
.** 
Add** 
(**  
role**  $
)**$ %
;**% &
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Role.. 
role..  $
)..$ %
{// 	
_roleDal00 
.00 
Update00 
(00 
role00 "
)00" #
;00# $
}11 	
public33 
void33 
Delete33 
(33 
Role33 
role33  $
)33$ %
{44 	
_roleDal55 
.55 
Delete55 
(55 
role55  
)55  !
;55! "
}66 	
public88 
List88 
<88 
Role88 
>88 
	GetByRole88 #
(88# $
int88$ '
roleId88( .
)88. /
{99 	
return:: 
_roleDal:: 
.:: 
GetList:: #
(::# $
filter::$ *
:::* +
t::, -
=>::. 0
t::1 2
.::2 3
RoleId::3 9
==::: <
roleId::= C
)::C D
.::D E
ToList::E K
(::K L
)::L M
;::M N
};; 	
}<< 
}== Ò
OE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\SaleManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
SaleManager 
: 
ManagerBase *
,* +
ISaleService, 8
{ 
private 
ISaleDal 
_saleDal !
;! "
public 
SaleManager 
( 
ISaleDal #
saleDal$ +
)+ ,
{ 	
_saleDal 
= 
saleDal 
; 
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Sale 
> 
GetAll  
(  !
)! "
{ 	
return 
_saleDal 
. 
GetList #
(# $
)$ %
;% &
} 	
public!! 
Sale!! 
GetById!! 
(!! 
int!! 
saleId!!  &
)!!& '
{"" 	
return## 
_saleDal## 
.## 
Get## 
(##  
u##  !
=>##" $
u##% &
.##& '
SaleId##' -
==##. 0
saleId##1 7
)##7 8
;##8 9
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Sale(( 
Add(( 
((( 
Sale(( 
sale(( !
)((! "
{)) 	
return** 
_saleDal** 
.** 
Add** 
(**  
sale**  $
)**$ %
;**% &
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Sale.. 
sale..  $
)..$ %
{// 	
_saleDal00 
.00 
Update00 
(00 
sale00 "
)00" #
;00# $
}11 	
public33 
void33 
Delete33 
(33 
Sale33 
sale33  $
)33$ %
{44 	
_saleDal55 
.55 
Delete55 
(55 
sale55  
)55  !
;55! "
}66 	
public88 
List88 
<88 
Sale88 
>88 
	GetBySale88 #
(88# $
int88$ '
saleId88( .
)88. /
{99 	
return:: 
_saleDal:: 
.:: 
GetList:: #
(::# $
filter::$ *
:::* +
t::, -
=>::. 0
t::1 2
.::2 3
SaleId::3 9
==::: <
saleId::= C
)::C D
.::D E
ToList::E K
(::K L
)::L M
;::M N
};; 	
}<< 
}== π
QE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\SellerManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
SellerManager 
:  
ManagerBase! ,
,, -
ISellerService. <
{ 
private 

ISellerDal 

_sellerDal %
;% &
public 
SellerManager 
( 

ISellerDal '
	sellerDal( 1
)1 2
{ 	

_sellerDal 
= 
	sellerDal "
;" #
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Seller 
> 
GetAll "
(" #
)# $
{ 	
return 

_sellerDal 
. 
GetList %
(% &
)& '
;' (
} 	
public!! 
Seller!! 
GetById!! 
(!! 
int!! !
sellerId!!" *
)!!* +
{"" 	
return## 

_sellerDal## 
.## 
Get## !
(##! "
u##" #
=>##$ &
u##' (
.##( )
SellerId##) 1
==##2 4
sellerId##5 =
)##= >
;##> ?
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Seller(( 
Add(( 
((( 
Seller((  
seller((! '
)((' (
{)) 	
return** 

_sellerDal** 
.** 
Add** !
(**! "
seller**" (
)**( )
;**) *
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Seller.. !
seller.." (
)..( )
{// 	

_sellerDal00 
.00 
Update00 
(00  
seller00  &
)00& '
;00' (
}11 	
public33 
void33 
Delete33 
(33 
Seller33 !
seller33" (
)33( )
{44 	

_sellerDal55 
.55 
Delete55 
(55 
seller55 $
)55$ %
;55% &
}66 	
public88 
List88 
<88 
Seller88 
>88 
GetBySeller88 '
(88' (
int88( +
sellerId88, 4
)884 5
{99 	
return:: 

_sellerDal:: 
.:: 
GetList:: %
(::% &
filter::& ,
:::, -
t::. /
=>::0 2
t::3 4
.::4 5
SellerId::5 =
==::> @
sellerId::A I
)::I J
.::J K
ToList::K Q
(::Q R
)::R S
;::S T
};; 	
}<< 
}== Å
SE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\UnitTypeManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
UnitTypeManager  
:! "
ManagerBase# .
,. /
IUnitTypeService0 @
{ 
private 
IUnitTypeDal 
_unitTypeDal )
;) *
public 
UnitTypeManager 
( 
IUnitTypeDal +
unitTypeDal, 7
)7 8
{ 	
_unitTypeDal 
= 
unitTypeDal &
;& '
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
UnitType 
> 
GetAll $
($ %
)% &
{ 	
return 
_unitTypeDal 
.  
GetList  '
(' (
)( )
;) *
} 	
public!! 
UnitType!! 
GetById!! 
(!!  
int!!  #

unitTypeId!!$ .
)!!. /
{"" 	
return## 
_unitTypeDal## 
.##  
Get##  #
(### $
u##$ %
=>##& (
u##) *
.##* +

UnitTypeId##+ 5
==##6 8

unitTypeId##9 C
)##C D
;##D E
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
UnitType(( 
Add(( 
((( 
UnitType(( $
unitType((% -
)((- .
{)) 	
return** 
_unitTypeDal** 
.**  
Add**  #
(**# $
unitType**$ ,
)**, -
;**- .
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
UnitType.. #
unitType..$ ,
).., -
{// 	
_unitTypeDal00 
.00 
Update00 !
(00! "
unitType00" *
)00* +
;00+ ,
}11 	
public33 
void33 
Delete33 
(33 
UnitType33 #
unitType33$ ,
)33, -
{44 	
_unitTypeDal55 
.55 
Delete55 
(55  
unitType55  (
)55( )
;55) *
}66 	
public88 
List88 
<88 
UnitType88 
>88 
GetByUnitType88 +
(88+ ,
int88, /

unitTypeId880 :
)88: ;
{99 	
return:: 
_unitTypeDal:: 
.::  
GetList::  '
(::' (
filter::( .
:::. /
t::0 1
=>::2 4
t::5 6
.::6 7

UnitTypeId::7 A
==::B D

unitTypeId::E O
)::O P
.::P Q
ToList::Q W
(::W X
)::X Y
;::Y Z
};; 	
}<< 
}== ¥(
OE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\UserManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 
class	 
UserManager 
: 
ManagerBase (
,( )
IUserService* 6
{ 
private 
readonly 
IUserDal 
_userDal &
;& '
public 

UserManager 
( 
IUserDal 
userDal  '
)' (
{ 
_userDal 
= 
userDal 
; 
} 
[ "
FluentValidationAspect 
( 
typeof "
(" #
UserValidator# 0
)0 1
)1 2
]2 3
public 

User $
GetByUserNameAndPassword (
(( )
string) /
userName0 8
,8 9
string: @
passwordA I
)I J
{ 
string 
encoded 
= 
Crypto 
. 
SHA256 $
($ %
password% -
)- .
;. /
return 
_userDal 
. 
Get 
( 
u 
=> 
u  
.  !
UserName! )
==* ,
userName- 5
&&6 8
u9 :
.: ;
Password; C
==D F
encodedG N
&&O Q
uR S
.S T
StateT Y
==Z \
true] a
)a b
;b c
} 
public   

List   
<   
User   
>   
GetAll   
(   
)   
{!! 
return"" 
_userDal"" 
."" 
GetList"" 
("" 
)"" 
;""  
}## 
public%% 

User%% 
GetById%% 
(%% 
int%% 
userId%% "
)%%" #
{&& 
return'' 
_userDal'' 
.'' 
Get'' 
('' 
u'' 
=>'' 
u''  
.''  !
UserId''! '
==''( *
userId''+ 1
)''1 2
;''2 3
}(( 
public** 

List** 
<** 
User** 
>** 
	GetByUser** 
(**  
int**  #
userId**$ *
)*** +
{++ 
return,, 
_userDal,, 
.,, 
GetList,, 
(,, 
filter,, $
:,,$ %
t,,& '
=>,,( *
t,,+ ,
.,,, -
UserId,,- 3
==,,4 6
userId,,7 =
),,= >
.,,> ?
ToList,,? E
(,,E F
),,F G
;,,G H
}-- 
public// 

List// 
<// 
UserRoleItem// 
>// 
GetUserRoles// *
(//* +
User//+ /
user//0 4
)//4 5
{00 
return11 
_userDal11 
.11 
GetUserRoles11 "
(11" #
user11# '
)11' (
;11( )
}22 
public55 

User55 
Add55 
(55 
User55 
user55 
)55 
{66 
return77 
_userDal77 
.77 
Add77 
(77 
user77 
)77 
;77  
}88 
public:: 

void:: 
Update:: 
(:: 
User:: 
user::  
)::  !
{;; 
_userDal<< 
.<< 
Update<< 
(<< 
user<< 
)<< 
;<< 
}== 
public?? 

void?? 
Delete?? 
(?? 
User?? 
user??  
)??  !
{@@ 
_userDalAA 
.AA 
DeleteAA 
(AA 
userAA 
)AA 
;AA 
}BB 
publicEE 

UserEE 
UniqueUserNameEE 
(EE 
stringEE %
userNameEE& .
)EE. /
{FF 
returnGG 
_userDalGG 
.GG 
GetListGG 
(GG 
)GG 
.GG  
FirstOrDefaultGG  .
(GG. /
uGG/ 0
=>GG1 3
uGG4 5
.GG5 6
UserNameGG6 >
==GG? A
userNameGGB J
)GGJ K
;GGK L
}HH 
publicJJ 

UserJJ 
UniqueEmailJJ 
(JJ 
stringJJ "
emailJJ# (
)JJ( )
{KK 
returnLL 
_userDalLL 
.LL 
GetListLL 
(LL 
)LL 
.LL  
FirstOrDefaultLL  .
(LL. /
uLL/ 0
=>LL1 3
uLL4 5
.LL5 6
EmailLL6 ;
==LL< >
emailLL? D
)LLD E
;LLE F
}MM 
}NN 
}OO Å
SE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\UserRoleManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
UserRoleManager  
:! "
ManagerBase# .
,. /
IUserRoleService0 @
{ 
private 
IUserRoleDal 
_userRoleDal )
;) *
public 
UserRoleManager 
( 
IUserRoleDal +
userRoleDal, 7
)7 8
{ 	
_userRoleDal 
= 
userRoleDal &
;& '
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
UserRole 
> 
GetAll $
($ %
)% &
{ 	
return 
_userRoleDal 
.  
GetList  '
(' (
)( )
;) *
} 	
public!! 
UserRole!! 
GetById!! 
(!!  
int!!  #

userRoleId!!$ .
)!!. /
{"" 	
return## 
_userRoleDal## 
.##  
Get##  #
(### $
u##$ %
=>##& (
u##) *
.##* +

UserRoleId##+ 5
==##6 8

userRoleId##9 C
)##C D
;##D E
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
UserRole(( 
Add(( 
((( 
UserRole(( $
userRole((% -
)((- .
{)) 	
return** 
_userRoleDal** 
.**  
Add**  #
(**# $
userRole**$ ,
)**, -
;**- .
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
UserRole.. #
userRole..$ ,
).., -
{// 	
_userRoleDal00 
.00 
Update00 !
(00! "
userRole00" *
)00* +
;00+ ,
}11 	
public33 
void33 
Delete33 
(33 
UserRole33 #
userRole33$ ,
)33, -
{44 	
_userRoleDal55 
.55 
Delete55 
(55  
userRole55  (
)55( )
;55) *
}66 	
public88 
List88 
<88 
UserRole88 
>88 
GetByUserRole88 +
(88+ ,
int88, /

userRoleId880 :
)88: ;
{99 	
return:: 
_userRoleDal:: 
.::  
GetList::  '
(::' (
filter::( .
:::. /
t::0 1
=>::2 4
t::5 6
.::6 7

UserRoleId::7 A
==::B D

userRoleId::E O
)::O P
.::P Q
ToList::Q W
(::W X
)::X Y
;::Y Z
};; 	
}<< 
}== Å
SE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\UserTypeManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
UserTypeManager  
:! "
ManagerBase# .
,. /
IUserTypeService0 @
{ 
private 
IUserTypeDal 
_userTypeDal )
;) *
public 
UserTypeManager 
( 
IUserTypeDal +
userTypeDal, 7
)7 8
{ 	
_userTypeDal 
= 
userTypeDal &
;& '
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
UserType 
> 
GetAll $
($ %
)% &
{ 	
return 
_userTypeDal 
.  
GetList  '
(' (
)( )
;) *
} 	
public!! 
UserType!! 
GetById!! 
(!!  
int!!  #

userTypeId!!$ .
)!!. /
{"" 	
return## 
_userTypeDal## 
.##  
Get##  #
(### $
u##$ %
=>##& (
u##) *
.##* +

UserTypeId##+ 5
==##6 8

userTypeId##9 C
)##C D
;##D E
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
UserType(( 
Add(( 
((( 
UserType(( $
userType((% -
)((- .
{)) 	
return** 
_userTypeDal** 
.**  
Add**  #
(**# $
userType**$ ,
)**, -
;**- .
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
UserType.. #
userType..$ ,
).., -
{// 	
_userTypeDal00 
.00 
Update00 !
(00! "
userType00" *
)00* +
;00+ ,
}11 	
public33 
void33 
Delete33 
(33 
UserType33 #
userType33$ ,
)33, -
{44 	
_userTypeDal55 
.55 
Delete55 
(55  
userType55  (
)55( )
;55) *
}66 	
public88 
List88 
<88 
UserType88 
>88 
GetByUserType88 +
(88+ ,
int88, /

userTypeId880 :
)88: ;
{99 	
return:: 
_userTypeDal:: 
.::  
GetList::  '
(::' (
filter::( .
:::. /
t::0 1
=>::2 4
t::5 6
.::6 7

UserTypeId::7 A
==::B D

userTypeId::E O
)::O P
.::P Q
ToList::Q W
(::W X
)::X Y
;::Y Z
};; 	
}<< 
}== Á
ZE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\vwRP_StockCountManager.cs
	namespace

 	
BayiPuan


 
.

 
Business

 
.

 
Concrete

 $
.

$ %
Managers

% -
{ 
public 

class "
vwRP_StockCountManager '
:' (
ManagerBase) 4
,4 5#
IvwRP_StockCountService6 M
{ 
private 
IvwRP_StockCount  
_rpStockCount! .
;. /
public "
vwRP_StockCountManager %
(% &
IvwRP_StockCount& 6
rpStockCount7 C
)C D
{ 	
_rpStockCount 
= 
rpStockCount (
;( )
} 	
public 
List 
< 
vwRP_StockCount #
># $
StockCounts% 0
(0 1
)1 2
{ 	
return 
_rpStockCount  
.  !
GetList! (
(( )
)) *
;* +
} 	
} 
} ï
PE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Concrete\Managers\ScoreManager.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Concrete $
.$ %
Managers% -
{ 
public 

class 
ScoreManager 
: 
ManagerBase  +
,+ ,
IScoreService- :
{ 
private 
	IScoreDal 
	_scoreDal #
;# $
public 
ScoreManager 
( 
	IScoreDal %
scoreDal& .
). /
{ 	
	_scoreDal 
= 
scoreDal  
;  !
} 	
[ 	
CacheAspect	 
( 
typeof 
( 
MemoryCacheManager .
). /
)/ 0
]0 1
public 
List 
< 
Score 
> 
GetAll !
(! "
)" #
{ 	
return 
	_scoreDal 
. 
GetList $
($ %
)% &
;& '
} 	
public!! 
Score!! 
GetById!! 
(!! 
int!!  
scoreId!!! (
)!!( )
{"" 	
return## 
	_scoreDal## 
.## 
Get##  
(##  !
u##! "
=>### %
u##& '
.##' (
ScoreId##( /
==##0 2
scoreId##3 :
)##: ;
;##; <
}$$ 	
['' 	
CacheRemoveAspect''	 
('' 
typeof'' !
(''! "
MemoryCacheManager''" 4
)''4 5
)''5 6
]''6 7
public(( 
Score(( 
Add(( 
((( 
Score(( 
score(( $
)(($ %
{)) 	
return** 
	_scoreDal** 
.** 
Add**  
(**  !
score**! &
)**& '
;**' (
}++ 	
[-- 	
CacheRemoveAspect--	 
(-- 
typeof-- !
(--! "
MemoryCacheManager--" 4
)--4 5
)--5 6
]--6 7
public.. 
void.. 
Update.. 
(.. 
Score..  
score..! &
)..& '
{// 	
	_scoreDal00 
.00 
Update00 
(00 
score00 $
)00$ %
;00% &
}11 	
public33 
void33 
Delete33 
(33 
Score33  
score33! &
)33& '
{44 	
	_scoreDal55 
.55 
Delete55 
(55 
score55 "
)55" #
;55# $
}66 	
public88 
List88 
<88 
Score88 
>88 

GetByScore88 %
(88% &
int88& )
scoreId88* 1
)881 2
{99 	
return:: 
	_scoreDal:: 
.:: 
GetList:: $
(::$ %
filter::% +
:::+ ,
t::- .
=>::/ 1
t::2 3
.::3 4
ScoreId::4 ;
==::< >
scoreId::? F
)::F G
.::G H
ToList::H N
(::N O
)::O P
;::P Q
};; 	
}<< 
}== ó
^E:\src\NewGenSource\BayiPuan\BayiPuan.Business\DependencyResolvers\Ninject\AutoMapperModule.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
DependencyResolvers /
./ 0
Ninject0 7
{ 
public 	
class 
AutoMapperModule !
:! "
NinjectModule" /
{ 
public 
override 
void 
Load !
(! "
)" #
{		 	
Bind

 
<

 
IMapper

 
>

 
(

 
)

 
.

 

ToConstant

 &
(

& '
CreateConfiguration

' :
(

: ;
)

; <
.

< =
CreateMapper

= I
(

I J
)

J K
)

K L
.

L M
InSingletonScope

M ]
(

] ^
)

^ _
;

_ `
} 	
private 
MapperConfiguration #
CreateConfiguration$ 7
(7 8
)8 9
{ 	
var 
config 
= 
new 
MapperConfiguration .
(. /
cfg/ 2
=>3 5
{ 
cfg 
. 
AddProfiles 
(  
GetType  '
(' (
)( )
.) *
Assembly* 2
)2 3
;3 4
} 
) 
; 
return 
config 
; 
} 	
} 
} æ~
\E:\src\NewGenSource\BayiPuan\BayiPuan.Business\DependencyResolvers\Ninject\BusinessModule.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
DependencyResolvers /
./ 0
Ninject0 7
{ 
public 
class	 
BusinessModule 
: 
NinjectModule  -
{ 
public 

override 
void 
Load 
( 
) 
{ 
Bind 

<
 
IAnswerService 
> 
( 
) 
. 
To 
<  
AnswerManager  -
>- .
(. /
)/ 0
.0 1
InSingletonScope1 A
(A B
)B C
;C D
Bind 

<
 

IAnswerDal 
> 
( 
) 
. 
To 
< 
EfAnswerDal '
>' (
(( )
)) *
.* +
InSingletonScope+ ;
(; <
)< =
;= >
Bind 

<
 !
IKnowledgeTestService  
>  !
(! "
)" #
.# $
To$ &
<& ' 
KnowledgeTestManager' ;
>; <
(< =
)= >
.> ?
InSingletonScope? O
(O P
)P Q
;Q R
Bind 

<
 
IKnowledgeTestDal 
> 
( 
) 
.  
To  "
<" #
EfKnowledgeTestDal# 5
>5 6
(6 7
)7 8
.8 9
InSingletonScope9 I
(I J
)J K
;K L
Bind 

<
 
IBrandService 
> 
( 
) 
. 
To 
< 
BrandManager +
>+ ,
(, -
)- .
.. /
InSingletonScope/ ?
(? @
)@ A
;A B
Bind 

<
 
	IBrandDal 
> 
( 
) 
. 
To 
< 

EfBrandDal %
>% &
(& '
)' (
.( )
InSingletonScope) 9
(9 :
): ;
;; <
Bind 

<
 
IMyNewService 
> 
( 
) 
. 
To 
< 
MyNewManager +
>+ ,
(, -
)- .
.. /
InSingletonScope/ ?
(? @
)@ A
;A B
Bind 

<
 
	IMyNewDal 
> 
( 
) 
. 
To 
< 

EfMyNewDal %
>% &
(& '
)' (
.( )
InSingletonScope) 9
(9 :
): ;
;; <
Bind 

<
 
IMyProductService 
> 
( 
) 
.  
To  "
<" #
MyProductManager# 3
>3 4
(4 5
)5 6
.6 7
InSingletonScope7 G
(G H
)H I
;I J
Bind 

<
 
IMyProductDal 
> 
( 
) 
. 
To 
< 
EfMyProductDal -
>- .
(. /
)/ 0
.0 1
InSingletonScope1 A
(A B
)B C
;C D
Bind 

<
 
IBuyService 
> 
( 
) 
. 
To 
< 

BuyManager '
>' (
(( )
)) *
.* +
InSingletonScope+ ;
(; <
)< =
;= >
Bind 

<
 
IBuyDal 
> 
( 
) 
. 
To 
< 
EfBuyDal !
>! "
(" #
)# $
.$ %
InSingletonScope% 5
(5 6
)6 7
;7 8
Bind 

<
 
ICampaignService 
> 
( 
) 
. 
To !
<! "
CampaignManager" 1
>1 2
(2 3
)3 4
.4 5
InSingletonScope5 E
(E F
)F G
;G H
Bind   

<  
 
ICampaignDal   
>   
(   
)   
.   
To   
<   
EfCampaignDal   +
>  + ,
(  , -
)  - .
.  . /
InSingletonScope  / ?
(  ? @
)  @ A
;  A B
Bind"" 

<""
 
ICategoryService"" 
>"" 
("" 
)"" 
."" 
To"" !
<""! "
CategoryManager""" 1
>""1 2
(""2 3
)""3 4
.""4 5
InSingletonScope""5 E
(""E F
)""F G
;""G H
Bind## 

<##
 
ICategoryDal## 
>## 
(## 
)## 
.## 
To## 
<## 
EfCategoryDal## +
>##+ ,
(##, -
)##- .
.##. /
InSingletonScope##/ ?
(##? @
)##@ A
;##A B
Bind%% 

<%%
 
ICityService%% 
>%% 
(%% 
)%% 
.%% 
To%% 
<%% 
CityManager%% )
>%%) *
(%%* +
)%%+ ,
.%%, -
InSingletonScope%%- =
(%%= >
)%%> ?
;%%? @
Bind&& 

<&&
 
ICityDal&& 
>&& 
(&& 
)&& 
.&& 
To&& 
<&& 
	EfCityDal&& #
>&&# $
(&&$ %
)&&% &
.&&& '
InSingletonScope&&' 7
(&&7 8
)&&8 9
;&&9 :
Bind(( 

<((
 
ICustomerService(( 
>(( 
((( 
)(( 
.(( 
To(( !
<((! "
CustomerManager((" 1
>((1 2
(((2 3
)((3 4
.((4 5
InSingletonScope((5 E
(((E F
)((F G
;((G H
Bind)) 

<))
 
ICustomerDal)) 
>)) 
()) 
))) 
.)) 
To)) 
<)) 
EfCustomerDal)) +
>))+ ,
()), -
)))- .
.)). /
InSingletonScope))/ ?
())? @
)))@ A
;))A B
Bind** 

<**
 
IScoreService** 
>** 
(** 
)** 
.** 
To** 
<** 
ScoreManager** +
>**+ ,
(**, -
)**- .
.**. /
InSingletonScope**/ ?
(**? @
)**@ A
;**A B
Bind++ 

<++
 
	IScoreDal++ 
>++ 
(++ 
)++ 
.++ 
To++ 
<++ 

EfScoreDal++ %
>++% &
(++& '
)++' (
.++( )
InSingletonScope++) 9
(++9 :
)++: ;
;++; <
Bind,, 

<,,
 
IGiftService,, 
>,, 
(,, 
),, 
.,, 
To,, 
<,, 
GiftManager,, )
>,,) *
(,,* +
),,+ ,
.,,, -
InSingletonScope,,- =
(,,= >
),,> ?
;,,? @
Bind-- 

<--
 
IGiftDal-- 
>-- 
(-- 
)-- 
.-- 
To-- 
<-- 
	EfGiftDal-- #
>--# $
(--$ %
)--% &
.--& '
InSingletonScope--' 7
(--7 8
)--8 9
;--9 :
Bind// 

<//
 
IGN_ReportService// 
>// 
(// 
)// 
.//  
To//  "
<//" #
GN_ReportManager//# 3
>//3 4
(//4 5
)//5 6
.//6 7
InSingletonScope//7 G
(//G H
)//H I
;//I J
Bind00 

<00
 
IGN_ReportDal00 
>00 
(00 
)00 
.00 
To00 
<00 
EfGN_ReportDal00 -
>00- .
(00. /
)00/ 0
.000 1
InSingletonScope001 A
(00A B
)00B C
;00C D
Bind22 

<22
 
ILanguageService22 
>22 
(22 
)22 
.22 
To22 !
<22! "
LanguageManager22" 1
>221 2
(222 3
)223 4
.224 5
InSingletonScope225 E
(22E F
)22F G
;22G H
Bind33 

<33
 
ILanguageDal33 
>33 
(33 
)33 
.33 
To33 
<33 
EfLanguageDal33 +
>33+ ,
(33, -
)33- .
.33. /
InSingletonScope33/ ?
(33? @
)33@ A
;33A B
Bind55 

<55
  
ILanguageWordService55 
>55  
(55  !
)55! "
.55" #
To55# %
<55% &
LanguageWordManager55& 9
>559 :
(55: ;
)55; <
.55< =
InSingletonScope55= M
(55M N
)55N O
;55O P
Bind66 

<66
 
ILanguageWordDal66 
>66 
(66 
)66 
.66 
To66 !
<66! "
EfLanguageWordDal66" 3
>663 4
(664 5
)665 6
.666 7
InSingletonScope667 G
(66G H
)66H I
;66I J
Bind88 

<88
 
IProductService88 
>88 
(88 
)88 
.88 
To88  
<88  !
ProductManager88! /
>88/ 0
(880 1
)881 2
.882 3
InSingletonScope883 C
(88C D
)88D E
;88E F
Bind99 

<99
 
IProductDal99 
>99 
(99 
)99 
.99 
To99 
<99 
EfProductDal99 )
>99) *
(99* +
)99+ ,
.99, -
InSingletonScope99- =
(99= >
)99> ?
;99? @
Bind;; 

<;;
 $
IRelationalPersonService;; #
>;;# $
(;;$ %
);;% &
.;;& '
To;;' )
<;;) *#
RelationalPersonManager;;* A
>;;A B
(;;B C
);;C D
.;;D E
InSingletonScope;;E U
(;;U V
);;V W
;;;W X
Bind<< 

<<<
  
IRelationalPersonDal<< 
><<  
(<<  !
)<<! "
.<<" #
To<<# %
<<<% &!
EfRelationalPersonDal<<& ;
><<; <
(<<< =
)<<= >
.<<> ?
InSingletonScope<<? O
(<<O P
)<<P Q
;<<Q R
Bind>> 

<>>
 
IRoleService>> 
>>> 
(>> 
)>> 
.>> 
To>> 
<>> 
RoleManager>> )
>>>) *
(>>* +
)>>+ ,
.>>, -
InSingletonScope>>- =
(>>= >
)>>> ?
;>>? @
Bind?? 

<??
 
IRoleDal?? 
>?? 
(?? 
)?? 
.?? 
To?? 
<?? 
	EfRoleDal?? #
>??# $
(??$ %
)??% &
.??& '
InSingletonScope??' 7
(??7 8
)??8 9
;??9 :
BindAA 

<AA
 
ISaleServiceAA 
>AA 
(AA 
)AA 
.AA 
ToAA 
<AA 
SaleManagerAA )
>AA) *
(AA* +
)AA+ ,
.AA, -
InSingletonScopeAA- =
(AA= >
)AA> ?
;AA? @
BindBB 

<BB
 
ISaleDalBB 
>BB 
(BB 
)BB 
.BB 
ToBB 
<BB 
	EfSaleDalBB #
>BB# $
(BB$ %
)BB% &
.BB& '
InSingletonScopeBB' 7
(BB7 8
)BB8 9
;BB9 :
BindDD 

<DD
 
ISellerServiceDD 
>DD 
(DD 
)DD 
.DD 
ToDD 
<DD  
SellerManagerDD  -
>DD- .
(DD. /
)DD/ 0
.DD0 1
InSingletonScopeDD1 A
(DDA B
)DDB C
;DDC D
BindEE 

<EE
 

ISellerDalEE 
>EE 
(EE 
)EE 
.EE 
ToEE 
<EE 
EfSellerDalEE '
>EE' (
(EE( )
)EE) *
.EE* +
InSingletonScopeEE+ ;
(EE; <
)EE< =
;EE= >
BindGG 

<GG
 
IUnitTypeServiceGG 
>GG 
(GG 
)GG 
.GG 
ToGG !
<GG! "
UnitTypeManagerGG" 1
>GG1 2
(GG2 3
)GG3 4
.GG4 5
InSingletonScopeGG5 E
(GGE F
)GGF G
;GGG H
BindHH 

<HH
 
IUnitTypeDalHH 
>HH 
(HH 
)HH 
.HH 
ToHH 
<HH 
EfUnitTypeDalHH +
>HH+ ,
(HH, -
)HH- .
.HH. /
InSingletonScopeHH/ ?
(HH? @
)HH@ A
;HHA B
BindJJ 

<JJ
 
IUserServiceJJ 
>JJ 
(JJ 
)JJ 
.JJ 
ToJJ 
<JJ 
UserManagerJJ )
>JJ) *
(JJ* +
)JJ+ ,
.JJ, -
InSingletonScopeJJ- =
(JJ= >
)JJ> ?
;JJ? @
BindKK 

<KK
 
IUserDalKK 
>KK 
(KK 
)KK 
.KK 
ToKK 
<KK 
	EfUserDalKK #
>KK# $
(KK$ %
)KK% &
.KK& '
InSingletonScopeKK' 7
(KK7 8
)KK8 9
;KK9 :
BindMM 

<MM
 
IUserRoleServiceMM 
>MM 
(MM 
)MM 
.MM 
ToMM !
<MM! "
UserRoleManagerMM" 1
>MM1 2
(MM2 3
)MM3 4
.MM4 5
InSingletonScopeMM5 E
(MME F
)MMF G
;MMG H
BindNN 

<NN
 
IUserRoleDalNN 
>NN 
(NN 
)NN 
.NN 
ToNN 
<NN 
EfUserRoleDalNN +
>NN+ ,
(NN, -
)NN- .
.NN. /
InSingletonScopeNN/ ?
(NN? @
)NN@ A
;NNA B
BindPP 

<PP
 
IUserTypeServicePP 
>PP 
(PP 
)PP 
.PP 
ToPP !
<PP! "
UserTypeManagerPP" 1
>PP1 2
(PP2 3
)PP3 4
.PP4 5
InSingletonScopePP5 E
(PPE F
)PPF G
;PPG H
BindQQ 

<QQ
 
IUserTypeDalQQ 
>QQ 
(QQ 
)QQ 
.QQ 
ToQQ 
<QQ 
EfUserTypeDalQQ +
>QQ+ ,
(QQ, -
)QQ- .
.QQ. /
InSingletonScopeQQ/ ?
(QQ? @
)QQ@ A
;QQA B
BindTT 

(TT
 
typeofTT 
(TT  
IQueryableRepositoryTT &
<TT& '
>TT' (
)TT( )
)TT) *
.TT* +
ToTT+ -
(TT- .
typeofTT. 4
(TT4 5!
EFQueryableRepositoryTT5 J
<TTJ K
>TTK L
)TTL M
)TTM N
;TTN O
BindUU 

<UU
 
	DbContextUU 
>UU 
(UU 
)UU 
.UU 
ToUU 
<UU 
BayiPuanContextUU *
>UU* +
(UU+ ,
)UU, -
;UU- .
}WW 
}XX 
}YY î
`E:\src\NewGenSource\BayiPuan\BayiPuan.Business\DependencyResolvers\Ninject\DependencyResolver.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
DependencyResolvers /
./ 0
Ninject0 7
{ 
public 

class 
DependencyResolver #
<# $
T$ %
>% &
{ 
public 
static 
T 
Resolve 
(  
)  !
{ 	
IKernel		 
kernel		 
=		 
new		  
StandardKernel		! /
(		/ 0
new		0 3
ResolveModule		4 A
(		A B
)		B C
,		C D
new		D G
AutoMapperModule		H X
(		X Y
)		Y Z
)		Z [
;		[ \
return 
kernel 
. 
Get 
< 
T 
>  
(  !
)! "
;" #
} 	
} 
} É
fE:\src\NewGenSource\BayiPuan\BayiPuan.Business\DependencyResolvers\Ninject\NinjectValidatoryFactory.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
DependencyResolvers /
./ 0
Ninject0 7
{ 
public 	
class
 $
NinjectValidatoryFactory (
:( ) 
ValidatorFactoryBase* >
{		 
private

 
readonly

 
IKernel

  
_kernel

! (
;

( )
public $
NinjectValidatoryFactory '
(' (
)( )
{ 	
_kernel 
= 
new 
StandardKernel (
(( )
new) ,
ValidationModule- =
(= >
)> ?
)? @
;@ A
} 	
public 
override 

IValidator "
CreateInstance# 1
(1 2
Type2 6
validatorType7 D
)D E
{ 	
return 
( 
validatorType !
==" $
null% )
)* +
?, -
null. 2
:3 4
(5 6

IValidator6 @
)@ A
_kernelA H
.H I
TryGetI O
(O P
validatorTypeP ]
)] ^
;^ _
} 	
} 
} ‹
[E:\src\NewGenSource\BayiPuan\BayiPuan.Business\DependencyResolvers\Ninject\ResolveModule.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
DependencyResolvers /
./ 0
Ninject0 7
{ 
public 

class 
ResolveModule 
:  
NinjectModule! .
{ 
public 
override 
void 
Load !
(! "
)" #
{		 	
Kernel

 
.

 
Load

 
(

 
new

 
BusinessModule

 *
(

* +
)

+ ,
)

, -
;

- .
} 	
} 
} Ø
[E:\src\NewGenSource\BayiPuan\BayiPuan.Business\DependencyResolvers\Ninject\ServiceModule.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
DependencyResolvers /
./ 0
Ninject0 7
{ 
public 

class 
ServiceModule 
: 
NinjectModule ,
{ 
public		 
override		 
void		 
Load		 !
(		! "
)		" #
{

 	
} 	
} 
} ›H
^E:\src\NewGenSource\BayiPuan\BayiPuan.Business\DependencyResolvers\Ninject\ValidationModule.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
DependencyResolvers /
./ 0
Ninject0 7
{ 
public 
class	 
ValidationModule 
:  !
NinjectModule" /
{		 
public

 

override

 
void

 
Load

 
(

 
)

 
{ 
Bind 

<
 

IValidator 
< 
Brand 
> 
> 
( 
) 
.  
To  "
<" #
BrandValidator# 1
>1 2
(2 3
)3 4
.4 5
InSingletonScope5 E
(E F
)F G
;G H
Bind 

<
 

IValidator 
< 
Buy 
> 
> 
( 
) 
. 
To  
<  !
BuyValidator! -
>- .
(. /
)/ 0
.0 1
InSingletonScope1 A
(A B
)B C
;C D
Bind 

<
 

IValidator 
< 
Campaign 
> 
>  
(  !
)! "
." #
To# %
<% &
CampaignValidator& 7
>7 8
(8 9
)9 :
.: ;
InSingletonScope; K
(K L
)L M
;M N
Bind 

<
 

IValidator 
< 
Category 
> 
>  
(  !
)! "
." #
To# %
<% &
CategoryValidator& 7
>7 8
(8 9
)9 :
.: ;
InSingletonScope; K
(K L
)L M
;M N
Bind 

<
 

IValidator 
< 
City 
> 
> 
( 
) 
. 
To !
<! "
CityValidator" /
>/ 0
(0 1
)1 2
.2 3
InSingletonScope3 C
(C D
)D E
;E F
Bind 

<
 

IValidator 
< 
Customer 
> 
>  
(  !
)! "
." #
To# %
<% &
CustomerValidator& 7
>7 8
(8 9
)9 :
.: ;
InSingletonScope; K
(K L
)L M
;M N
Bind 

<
 

IValidator 
< 
Gift 
> 
> 
( 
) 
. 
To !
<! "
GiftValidator" /
>/ 0
(0 1
)1 2
.2 3
InSingletonScope3 C
(C D
)D E
;E F
Bind 

<
 

IValidator 
< 
	GN_Report 
>  
>  !
(! "
)" #
.# $
To$ &
<& '
GN_ReportValidator' 9
>9 :
(: ;
); <
.< =
InSingletonScope= M
(M N
)N O
;O P
Bind 

<
 

IValidator 
< 
Language 
> 
>  
(  !
)! "
." #
To# %
<% &
LanguageValidator& 7
>7 8
(8 9
)9 :
.: ;
InSingletonScope; K
(K L
)L M
;M N
Bind 

<
 

IValidator 
< 
LanguageWord "
>" #
># $
($ %
)% &
.& '
To' )
<) *!
LanguageWordValidator* ?
>? @
(@ A
)A B
.B C
InSingletonScopeC S
(S T
)T U
;U V
Bind 

<
 

IValidator 
< 
Product 
> 
> 
(  
)  !
.! "
To" $
<$ %
ProductValidator% 5
>5 6
(6 7
)7 8
.8 9
InSingletonScope9 I
(I J
)J K
;K L
Bind 

<
 

IValidator 
< 
RelationalPerson &
>& '
>' (
(( )
)) *
.* +
To+ -
<- .%
RelationalPersonValidator. G
>G H
(H I
)I J
.J K
InSingletonScopeK [
([ \
)\ ]
;] ^
Bind 

<
 

IValidator 
< 
Role 
> 
> 
( 
) 
. 
To !
<! "
RoleValidator" /
>/ 0
(0 1
)1 2
.2 3
InSingletonScope3 C
(C D
)D E
;E F
Bind 

<
 

IValidator 
< 
Sale 
> 
> 
( 
) 
. 
To !
<! "
SaleValidator" /
>/ 0
(0 1
)1 2
.2 3
InSingletonScope3 C
(C D
)D E
;E F
Bind 

<
 

IValidator 
< 
Seller 
> 
> 
( 
)  
.  !
To! #
<# $
SellerValidator$ 3
>3 4
(4 5
)5 6
.6 7
InSingletonScope7 G
(G H
)H I
;I J
Bind 

<
 

IValidator 
< 
UnitType 
> 
>  
(  !
)! "
." #
To# %
<% &
UnitTypeValidator& 7
>7 8
(8 9
)9 :
.: ;
InSingletonScope; K
(K L
)L M
;M N
Bind 

<
 

IValidator 
< 
User 
> 
> 
( 
) 
. 
To !
<! "
UserValidator" /
>/ 0
(0 1
)1 2
.2 3
InSingletonScope3 C
(C D
)D E
;E F
Bind 

<
 

IValidator 
< 
UserRole 
> 
>  
(  !
)! "
." #
To# %
<% &
UserRoleValidator& 7
>7 8
(8 9
)9 :
.: ;
InSingletonScope; K
(K L
)L M
;M N
Bind 

<
 

IValidator 
< 
UserType 
> 
>  
(  !
)! "
." #
To# %
<% &
UserTypeValidator& 7
>7 8
(8 9
)9 :
.: ;
InSingletonScope; K
(K L
)L M
;M N
Bind 

<
 

IValidator 
< 
Score 
> 
> 
( 
) 
.  
To  "
<" #
ScoreValidator# 1
>1 2
(2 3
)3 4
.4 5
InSingletonScope5 E
(E F
)F G
;G H
Bind   

<  
 

IValidator   
<   
Answer   
>   
>   
(   
)    
.    !
To  ! #
<  # $
AnswerValidator  $ 3
>  3 4
(  4 5
)  5 6
.  6 7
InSingletonScope  7 G
(  G H
)  H I
;  I J
Bind!! 

<!!
 

IValidator!! 
<!! 
KnowledgeTest!! #
>!!# $
>!!$ %
(!!% &
)!!& '
.!!' (
To!!( *
<!!* +"
KnowledgeTestValidator!!+ A
>!!A B
(!!B C
)!!C D
.!!D E
InSingletonScope!!E U
(!!U V
)!!V W
;!!W X
Bind"" 

<""
 

IValidator"" 
<"" 
MyNew"" 
>"" 
>"" 
("" 
)"" 
.""  
To""  "
<""" #
MyNewValidator""# 1
>""1 2
(""2 3
)""3 4
.""4 5
InSingletonScope""5 E
(""E F
)""F G
;""G H
Bind## 

<##
 

IValidator## 
<## 
	MyProduct## 
>##  
>##  !
(##! "
)##" #
.### $
To##$ &
<##& '
MyProductValidator##' 9
>##9 :
(##: ;
)##; <
.##< =
InSingletonScope##= M
(##M N
)##N O
;##O P
}%% 
}&& 
}'' ¡!
_E:\src\NewGenSource\BayiPuan\BayiPuan.Business\Mappings\AutoMapper\Profiles\BusinessProfiles.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
Mappings $
.$ %

AutoMapper% /
./ 0
Profiles0 8
{ 
public 
class	 
BusinessProfiles 
:  !
Profile" )
{ 
public 

BusinessProfiles 
( 
) 
{		 
	CreateMap

 
<

 
Brand

 
,

 
Brand

 
>

 
(

 
)

 
;

  
	CreateMap 
< 
Campaign 
, 
Campaign "
>" #
(# $
)$ %
;% &
	CreateMap 
< 
Category 
, 
Category "
>" #
(# $
)$ %
;% &
	CreateMap 
< 
City 
, 
City 
> 
( 
) 
; 
	CreateMap 
< 
Customer 
, 
Customer "
>" #
(# $
)$ %
;% &
	CreateMap 
< 
Language 
, 
Language "
>" #
(# $
)$ %
;% &
	CreateMap 
< 
LanguageWord 
, 
LanguageWord *
>* +
(+ ,
), -
;- .
	CreateMap 
< 
Product 
, 
Product  
>  !
(! "
)" #
;# $
	CreateMap 
< 
RelationalPerson  
,  !
RelationalPerson" 2
>2 3
(3 4
)4 5
;5 6
	CreateMap 
< 
	GN_Report 
, 
	GN_Report $
>$ %
(% &
)& '
;' (
	CreateMap 
< 
Role 
, 
Role 
> 
( 
) 
; 
	CreateMap 
< 
Sale 
, 
Sale 
> 
( 
) 
; 
	CreateMap 
< 
Seller 
, 
Seller 
> 
(  
)  !
;! "
	CreateMap 
< 
UnitType 
, 
UnitType "
>" #
(# $
)$ %
;% &
	CreateMap 
< 
User 
, 
User 
> 
( 
) 
; 
	CreateMap 
< 
UserRole 
, 
UserRole "
>" #
(# $
)$ %
;% &
	CreateMap 
< 
UserType 
, 
UserType "
>" #
(# $
)$ %
;% &
	CreateMap 
< 
Gift 
, 
Gift 
> 
( 
) 
; 
	CreateMap 
< 
Buy 
, 
Buy 
> 
( 
) 
; 
	CreateMap 
< 
Score 
, 
Score 
> 
( 
) 
;  
	CreateMap 
< 
Answer 
, 
Answer 
> 
(  
)  !
;! "
	CreateMap 
< 
KnowledgeTest 
, 
KnowledgeTest ,
>, -
(- .
). /
;/ 0
	CreateMap   
<   
MyNew   
,   
MyNew   
>   
(   
)   
;    
	CreateMap!! 
<!! 
	MyProduct!! 
,!! 
	MyProduct!! $
>!!$ %
(!!% &
)!!& '
;!!' (
}"" 
}## 
}$$ ì
IE:\src\NewGenSource\BayiPuan\BayiPuan.Business\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str ,
), -
]- .
[ 
assembly 	
:	 

AssemblyDescription 
( 
$str !
)! "
]" #
[ 
assembly 	
:	 
!
AssemblyConfiguration  
(  !
$str! #
)# $
]$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str .
). /
]/ 0
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 

ExceptionLogAspect 
( 
typeof $
($ %
DatabaseLogger% 3
)3 4
,4 5 
AttributeTargetTypes6 J
=K L
$strM t
)t u
]u v
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[)) 
assembly)) 	
:))	 

AssemblyVersion)) 
()) 
$str)) $
)))$ %
]))% &
[** 
assembly** 	
:**	 

AssemblyFileVersion** 
(** 
$str** (
)**( )
]**) *°
bE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\AnswerValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
AnswerValidator		 
:		  
AbstractValidator		  1
<		1 2
Answer		2 8
>		8 9
{

 
public 
AnswerValidator 
( 
)  
{ 	
var 
answerService 
= 
DependencyResolver .
<. /
IAnswerService/ =
>= >
.> ?
Resolve? F
(F G
)G H
;H I
RuleFor 
( 
x 
=> 
x 
. 
AnswerId #
)# $
.$ %
NotEmpty% -
(- .
). /
;/ 0
RuleFor 
( 
x 	
=>
 
x 
. 
KnowledgeTest 
) 
. 
NotEmpty &
(& '
)' (
;( )
RuleFor 
( 
x 	
=>
 
x 
. 
KnowledgeTestId 
) 
.  
NotEmpty  (
(( )
)) *
;* +
RuleFor 
( 
x 	
=>
 
x 
. 
User 
) 
. 
NotEmpty 
( 
) 
;  
RuleFor 
( 
x 	
=>
 
x 
. 
UserId 
) 
. 
NotEmpty 
(  
)  !
;! "
RuleFor 
( 
x 	
=>
 
x 
. 

AnswerDate 
) 
. 
NotEmpty #
(# $
)$ %
;% &
RuleFor 
( 
x 	
=>
 
x 
. 
ValidAnswer 
) 
. 
NotEmpty $
($ %
)% &
;& '
}## 	
}$$ 
}%% ï
aE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\BrandValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
BrandValidator		 
:		 
AbstractValidator		 0
<		0 1
Brand		1 6
>		6 7
{

 
public 
BrandValidator 
( 
) 
{ 	
var 
brandService 
= 
DependencyResolver -
<- .
IBrandService. ;
>; <
.< =
Resolve= D
(D E
)E F
;F G
RuleFor 
( 
x 
=> 
x 
. 
BrandId "
)" #
.# $
NotEmpty$ ,
(, -
)- .
;. /
RuleFor 
( 
x 	
=>
 
x 
. 
	BrandName 
) 
. 
NotEmpty "
(" #
)# $
;$ %
RuleFor 
( 
x 	
=>
 
x 
. 

BrandImage 
) 
. 
NotEmpty #
(# $
)$ %
;% &
RuleFor 
( 
x 	
=>
 
x 
. 
BrandImageExt 
) 
. 
NotEmpty &
(& '
)' (
;( )
}   	
}!! 
}"" Õ
_E:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\BuyValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
BuyValidator		 
:		 
AbstractValidator		 .
<		. /
Buy		/ 2
>		2 3
{

 
public 
BuyValidator 
( 
) 
{ 	
var 

buyService 
= 
DependencyResolver +
<+ ,
IBuyService, 7
>7 8
.8 9
Resolve9 @
(@ A
)A B
;B C
RuleFor 
( 
x 
=> 
x 
. 
BuyId  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
RuleFor 
( 
x 	
=>
 
x 
. 
Gift 
) 
. 
NotEmpty 
( 
) 
;  
RuleFor 
( 
x 	
=>
 
x 
. 
GiftId 
) 
. 
NotEmpty 
(  
)  !
;! "
RuleFor 
( 
x 	
=>
 
x 
. 
User 
) 
. 
NotEmpty 
( 
) 
;  
RuleFor 
( 
x 	
=>
 
x 
. 
UserId 
) 
. 
NotEmpty 
(  
)  !
;! "
RuleFor 
( 
x 	
=>
 
x 
. 
BuyDate 
) 
. 
NotEmpty  
(  !
)! "
;" #
RuleFor 
( 
x 	
=>
 
x 
. 
	BuyAmount 
) 
. 
NotEmpty "
(" #
)# $
;$ %
RuleFor 
( 
x 	
=>
 
x 
. 

IsApproved 
) 
. 
NotEmpty #
(# $
)$ %
;% &
}%% 	
}&& 
}'' ˙	
dE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\CampaignValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
CampaignValidator		 !
:		! "
AbstractValidator		" 3
<		3 4
Campaign		4 <
>		< =
{

 
public 
CampaignValidator  
(  !
)! "
{ 	
var 
campaignService 
= 
DependencyResolver 0
<0 1
ICampaignService1 A
>A B
.B C
ResolveC J
(J K
)K L
;L M
RuleFor 
( 
x 
=> 
x 
. 

CampaignId %
)% &
.& '
NotEmpty' /
(/ 0
)0 1
;1 2
RuleFor 
( 
x 	
=>
 
x 
. 
CampaignName 
) 
. 
NotEmpty %
(% &
)& '
;' (
} 	
} 
}   ’
dE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\CategoryValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
CategoryValidator		 !
:		! "
AbstractValidator		" 3
<		3 4
Category		4 <
>		< =
{

 
public 
CategoryValidator  
(  !
)! "
{ 	
var 
categoryService 
= 
DependencyResolver 0
<0 1
ICategoryService1 A
>A B
.B C
ResolveC J
(J K
)K L
;L M
RuleFor 
( 
x 
=> 
x 
. 

CategoryId %
)% &
.& '
NotEmpty' /
(/ 0
)0 1
;1 2
RuleFor 
( 
x 	
=>
 
x 
. 
CategoryName 
) 
. 
NotEmpty %
(% &
)& '
;' (
RuleFor 
( 
x 	
=>
 
x 
. 
TopCategoryId 
) 
. 
NotEmpty &
(& '
)' (
;( )
} 	
}   
}!! ⁄	
`E:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\CityValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
CityValidator		 
:		 
AbstractValidator		 /
<		/ 0
City		0 4
>		4 5
{

 
public 
CityValidator 
( 
) 
{ 	
var 
cityService 
= 
DependencyResolver ,
<, -
ICityService- 9
>9 :
.: ;
Resolve; B
(B C
)C D
;D E
RuleFor 
( 
x 
=> 
x 
. 
CityId !
)! "
." #
NotEmpty# +
(+ ,
), -
;- .
RuleFor 
( 
x 	
=>
 
x 
. 
CityName 
) 
. 
NotEmpty !
(! "
)" #
;# $
} 	
} 
}   ⁄
dE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\CustomerValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 
class			 
CustomerValidator		  
:		! "
AbstractValidator		# 4
<		4 5
Customer		5 =
>		= >
{

 
public 

CustomerValidator 
( 
) 
{ 
var 	
customerService
 
= 
DependencyResolver .
<. /
ICustomerService/ ?
>? @
.@ A
ResolveA H
(H I
)I J
;J K
RuleFor 
( 
x 
=> 
x 
. 

CustomerId 
)  
.  !
NotEmpty! )
() *
)* +
;+ ,
RuleFor 
( 
x 
=> 
x 
. 
CustomerName !
)! "
." #
NotEmpty# +
(+ ,
), -
;- .
RuleFor 
( 
x 
=> 
x 
. 
TaxNo 
) 
. 
NotEmpty $
($ %
)% &
;& '
RuleFor 
( 
x 
=> 
x 
. 
TaxAdministration &
)& '
.' (
NotEmpty( 0
(0 1
)1 2
;2 3
RuleFor 
( 
x 
=> 
x 
.  
RelationalPersonName )
)) *
.* +
NotEmpty+ 3
(3 4
)4 5
;5 6
RuleFor 
( 
x 
=> 
x 
. #
RelationalPersonSurname ,
), -
.- .
NotEmpty. 6
(6 7
)7 8
;8 9
RuleFor 
( 
x 
=> 
x 
. 
MobilePhone  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
}## 
}$$ 
}%% ﬂ
`E:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\GiftValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 
class			 
GiftValidator		 
:		 
AbstractValidator		 0
<		0 1
Gift		1 5
>		5 6
{

 
public 

GiftValidator 
( 
) 
{ 
var 	
giftService
 
= 
DependencyResolver *
<* +
IGiftService+ 7
>7 8
.8 9
Resolve9 @
(@ A
)A B
;B C
RuleFor 
( 
x 
=> 
x 
. 
GiftId 
) 
. 
NotEmpty %
(% &
)& '
;' (
RuleFor 
( 
x 
=> 
x 
. 

CategoryId 
)  
.  !
NotEmpty! )
() *
)* +
;+ ,
RuleFor 
( 
x 
=> 
x 
. 
BrandId 
) 
. 
NotEmpty &
(& '
)' (
;( )
RuleFor 
( 
x 
=> 
x 
. 
Usage 
) 
. 
NotEmpty $
($ %
)% &
;& '
RuleFor 
( 
x 
=> 
x 
. 
Coverage 
) 
. 
NotEmpty '
(' (
)( )
;) *
RuleFor 
( 
x 
=> 
x 
. 
ValidityPeriod #
)# $
.$ %
NotEmpty% -
(- .
). /
;/ 0
RuleFor 
( 
x 
=> 
x 
. 
Indivisible  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
RuleFor 
( 
x 
=> 
x 
. 
	Combining 
) 
.  
NotEmpty  (
(( )
)) *
;* +
RuleFor 
( 
x 
=> 
x 
. 
	TermOfUse 
) 
.  
NotEmpty  (
(( )
)) *
;* +
RuleFor 
( 
x 
=> 
x 
. 
Cancellation !
)! "
." #
NotEmpty# +
(+ ,
), -
;- .
RuleFor 
( 
x 
=> 
x 
. 
Description  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
RuleFor 
( 
x 
=> 
x 
. 
	GiftPoint 
) 
.  
NotEmpty  (
(( )
)) *
;* +
})) 
}** 
}++ ∂
eE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\GN_ReportValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 
class			 
GN_ReportValidator		 !
:		" #
AbstractValidator		$ 5
<		5 6
	GN_Report		6 ?
>		? @
{

 
public 

GN_ReportValidator 
( 
) 
{ 
var 	
gN_ReportService
 
= 
DependencyResolver /
</ 0
IGN_ReportService0 A
>A B
.B C
ResolveC J
(J K
)K L
;L M
RuleFor 
( 
x 
=> 
x 
. 
ReportId 
) 
. 
NotEmpty '
(' (
)( )
;) *
RuleFor 
( 
x 
=> 
x 
. 
ReportTitle  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
RuleFor 
( 
x 
=> 
x 
. 
	ReportSql 
) 
.  
NotEmpty  (
(( )
)) *
;* +
RuleFor 
( 
x 
=> 
x 
. 
ReportFilter !
)! "
." #
NotEmpty# +
(+ ,
), -
;- .
}!! 
}"" 
}## Œ
iE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\KnowledgeTestValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 "
KnowledgeTestValidator		 &
:		& '
AbstractValidator		' 8
<		8 9
KnowledgeTest		9 F
>		F G
{

 
public "
KnowledgeTestValidator %
(% &
)& '
{ 	
var  
knowledgeTestService  
=! "
DependencyResolver# 5
<5 6!
IKnowledgeTestService6 K
>K L
.L M
ResolveM T
(T U
)U V
;V W
RuleFor 
( 
x 
=> 
x 
. 
KnowledgeTestId *
)* +
.+ ,
NotEmpty, 4
(4 5
)5 6
;6 7
RuleFor 
( 
x 	
=>
 
x 
. 
Question 
) 
. 
NotEmpty !
(! "
)" #
;# $
RuleFor 
( 
x 	
=>
 
x 
. 
Answer1 
) 
. 
NotEmpty  
(  !
)! "
;" #
RuleFor 
( 
x 	
=>
 
x 
. 
Answer2 
) 
. 
NotEmpty  
(  !
)! "
;" #
RuleFor 
( 
x 	
=>
 
x 
. 
Answer3 
) 
. 
NotEmpty  
(  !
)! "
;" #
RuleFor 
( 
x 	
=>
 
x 
. 
Answer4 
) 
. 
NotEmpty  
(  !
)! "
;" #
RuleFor 
( 
x 	
=>
 
x 
. 
ValidAnswerType 
) 
.  
NotEmpty  (
(( )
)) *
;* +
RuleFor 
( 
x 	
=>
 
x 
. 
Point 
) 
. 
NotEmpty 
( 
)  
;  !
RuleFor 
( 
x 	
=>
 
x 
. 
KnowledgeDate 
) 
. 
NotEmpty &
(& '
)' (
;( )
RuleFor 
( 
x 	
=>
 
x 
. 
IsActive 
) 
. 
NotEmpty !
(! "
)" #
;# $
}&& 	
}'' 
}(( ƒ
dE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\LanguageValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
LanguageValidator		 !
:		! "
AbstractValidator		" 3
<		3 4
Language		4 <
>		< =
{

 
public 
LanguageValidator  
(  !
)! "
{ 	
var 
languageService 
= 
DependencyResolver 0
<0 1
ILanguageService1 A
>A B
.B C
ResolveC J
(J K
)K L
;L M
RuleFor 
( 
x 
=> 
x 
. 

LanguageId %
)% &
.& '
NotEmpty' /
(/ 0
)0 1
;1 2
RuleFor 
( 
x 	
=>
 
x 
. 
Name 
) 
. 
NotEmpty 
( 
) 
;  
RuleFor 
( 
x 	
=>
 
x 
. 
Code 
) 
. 
NotEmpty 
( 
) 
;  
} 	
}   
}!! ≠
hE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\LanguageWordValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 !
LanguageWordValidator		 %
:		% &
AbstractValidator		& 7
<		7 8
LanguageWord		8 D
>		D E
{

 
public !
LanguageWordValidator $
($ %
)% &
{ 	
var 
languageWordService 
=  !
DependencyResolver" 4
<4 5 
ILanguageWordService5 I
>I J
.J K
ResolveK R
(R S
)S T
;T U
RuleFor 
( 
x 
=> 
x 
. 
Id 
) 
. 
NotEmpty '
(' (
)( )
;) *
RuleFor 
( 
x 	
=>
 
x 
. 

LanguageId 
) 
. 
NotEmpty #
(# $
)$ %
;% &
RuleFor 
( 
x 	
=>
 
x 
. 
Code 
) 
. 
NotEmpty 
( 
) 
;  
RuleFor 
( 
x 	
=>
 
x 
. 
Value 
) 
. 
NotEmpty 
( 
)  
;  !
}   	
}!! 
}"" ñ
aE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\MyNewValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
MyNewValidator		 
:		 
AbstractValidator		 0
<		0 1
MyNew		1 6
>		6 7
{

 
public 
MyNewValidator 
( 
) 
{ 	
var 
myNewService 
= 
DependencyResolver -
<- .
IMyNewService. ;
>; <
.< =
Resolve= D
(D E
)E F
;F G
RuleFor 
( 
x 
=> 
x 
. 
NewsId !
)! "
." #
NotEmpty# +
(+ ,
), -
;- .
RuleFor 
( 
x 	
=>
 
x 
. 
NewsName 
) 
. 
NotEmpty !
(! "
)" #
;# $
RuleFor 
( 
x 	
=>
 
x 
. 
	NewsImage 
) 
. 
NotEmpty "
(" #
)# $
;$ %
RuleFor 
( 
x 	
=>
 
x 
. 
NewsImageExt 
) 
. 
NotEmpty %
(% &
)& '
;' (
RuleFor 
( 
x 	
=>
 
x 
. 
Description 
) 
. 
NotEmpty $
($ %
)% &
;& '
RuleFor 
( 
x 	
=>
 
x 
. 
NewsType 
) 
. 
NotEmpty !
(! "
)" #
;# $
RuleFor 
( 
x 	
=>
 
x 
. 
IsActive 
) 
. 
NotEmpty !
(! "
)" #
;# $
}## 	
}$$ 
}%% Í
eE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\MyProductValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
MyProductValidator		 "
:		" #
AbstractValidator		# 4
<		4 5
	MyProduct		5 >
>		> ?
{

 
public 
MyProductValidator !
(! "
)" #
{ 	
var 
myProductService 
= 
DependencyResolver 1
<1 2
IMyProductService2 C
>C D
.D E
ResolveE L
(L M
)M N
;N O
RuleFor 
( 
x 
=> 
x 
. 
MyProductId &
)& '
.' (
NotEmpty( 0
(0 1
)1 2
;2 3
RuleFor 
( 
x 	
=>
 
x 
. 
ProductName 
) 
. 
NotEmpty $
($ %
)% &
;& '
RuleFor 
( 
x 	
=>
 
x 
. 
MyProductImage 
) 
. 
NotEmpty '
(' (
)( )
;) *
RuleFor 
( 
x 	
=>
 
x 
. 
MyProductImageExt  
)  !
.! "
NotEmpty" *
(* +
)+ ,
;, -
RuleFor 
( 
x 	
=>
 
x 
. 
Description 
) 
. 
NotEmpty $
($ %
)% &
;& '
RuleFor 
( 
x 	
=>
 
x 
. 
IsActive 
) 
. 
NotEmpty !
(! "
)" #
;# $
}"" 	
}## 
}$$  
cE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\ProductValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
ProductValidator		  
:		  !
AbstractValidator		! 2
<		2 3
Product		3 :
>		: ;
{

 
public 
ProductValidator 
(  
)  !
{ 	
var 
productService 
= 
DependencyResolver /
</ 0
IProductService0 ?
>? @
.@ A
ResolveA H
(H I
)I J
;J K
RuleFor 
( 
x 
=> 
x 
. 
	ProductId $
)$ %
.% &
NotEmpty& .
(. /
)/ 0
;0 1
RuleFor 
( 
x 	
=>
 
x 
. 
ProductCode 
) 
. 
NotEmpty $
($ %
)% &
;& '
RuleFor 
( 
x 	
=>
 
x 
. 
ProductShortCode 
)  
.  !
NotEmpty! )
() *
)* +
;+ ,
RuleFor 
( 
x 	
=>
 
x 
. 
ProductName 
) 
. 
NotEmpty $
($ %
)% &
;& '
RuleFor 
( 
x 	
=>
 
x 
. 

UnitTypeId 
) 
. 
NotEmpty #
(# $
)$ %
;% &
RuleFor 
( 
x 	
=>
 
x 
. 
StockAmount 
) 
. 
NotEmpty $
($ %
)% &
;& '
RuleFor 
( 
x 	
=>
 
x 
.  
RemainingStockAmount #
)# $
.$ %
NotEmpty% -
(- .
). /
;/ 0
RuleFor 
( 
x 	
=>
 
x 
. 
CriticalStockAmount "
)" #
.# $
NotEmpty$ ,
(, -
)- .
;. /
RuleFor 
( 
x 	
=>
 
x 
. 
Point 
) 
. 
NotEmpty 
( 
)  
;  !
RuleFor 
( 
x 	
=>
 
x 
. 
PointToMoney 
) 
. 
NotEmpty %
(% &
)& '
;' (
}&& 	
}'' 
}(( ¯
lE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\RelationalPersonValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 %
RelationalPersonValidator		 )
:		) *
AbstractValidator		* ;
<		; <
RelationalPerson		< L
>		L M
{

 
public %
RelationalPersonValidator (
(( )
)) *
{ 	
var #
relationalPersonService #
=$ %
DependencyResolver& 8
<8 9$
IRelationalPersonService9 Q
>Q R
.R S
ResolveS Z
(Z [
)[ \
;\ ]
RuleFor 
( 
x 
=> 
x 
. 
RelationalPersonId -
)- .
.. /
NotEmpty/ 7
(7 8
)8 9
;9 :
RuleFor 
( 
x 	
=>
 
x 
.  
RelationalPersonName #
)# $
.$ %
NotEmpty% -
(- .
). /
;/ 0
RuleFor 
( 
x 	
=>
 
x 
. #
RelationalPersonSurname &
)& '
.' (
NotEmpty( 0
(0 1
)1 2
;2 3
RuleFor 
( 
x 	
=>
 
x 
. 
MobilePhone 
) 
. 
NotEmpty $
($ %
)% &
;& '
}   	
}!! 
}"" ⁄	
`E:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\RoleValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
RoleValidator		 
:		 
AbstractValidator		 /
<		/ 0
Role		0 4
>		4 5
{

 
public 
RoleValidator 
( 
) 
{ 	
var 
roleService 
= 
DependencyResolver ,
<, -
IRoleService- 9
>9 :
.: ;
Resolve; B
(B C
)C D
;D E
RuleFor 
( 
x 
=> 
x 
. 
RoleId !
)! "
." #
NotEmpty# +
(+ ,
), -
;- .
RuleFor 
( 
x 	
=>
 
x 
. 
RoleName 
) 
. 
NotEmpty !
(! "
)" #
;# $
} 	
} 
}   Ù
`E:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\SaleValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
SaleValidator		 
:		 
AbstractValidator		 /
<		/ 0
Sale		0 4
>		4 5
{

 
public 
SaleValidator 
( 
) 
{ 	
var 
saleService 
= 
DependencyResolver ,
<, -
ISaleService- 9
>9 :
.: ;
Resolve; B
(B C
)C D
;D E
RuleFor 
( 
x 
=> 
x 
. 
SaleId !
)! "
." #
NotEmpty# +
(+ ,
), -
;- .
RuleFor 
( 
x 	
=>
 
x 
. 

CustomerId 
) 
. 
NotEmpty #
(# $
)$ %
;% &
RuleFor 
( 
x 	
=>
 
x 
. 
	InvoiceNo 
) 
. 
NotEmpty "
(" #
)# $
;$ %
RuleFor 
( 
x 	
=>
 
x 
. 
InvoiceImage 
) 
. 
NotEmpty %
(% &
)& '
.' (
WithMessage( 3
(3 4
$str4 P
)P Q
;Q R
RuleFor 
( 
x 	
=>
 
x 
. 
InvoiceImageExt 
) 
.  
NotEmpty  (
(( )
)) *
;* +
RuleFor 
( 
x 	
=>
 
x 
. 
	ProductId 
) 
. 
NotEmpty "
(" #
)# $
;$ %
RuleFor 
( 
x 	
=>
 
x 
. 
AmountOfSales 
) 
. 
NotEmpty &
(& '
)' (
;( )
}## 	
}$$ 
}%% ∫
aE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\ScoreValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
ScoreValidator		 
:		 
AbstractValidator		 0
<		0 1
Score		1 6
>		6 7
{

 
public 
ScoreValidator 
( 
) 
{ 	
var 
scoreService 
= 
DependencyResolver -
<- .
IScoreService. ;
>; <
.< =
Resolve= D
(D E
)E F
;F G
RuleFor 
( 
x 
=> 
x 
. 
ScoreId "
)" #
.# $
NotEmpty$ ,
(, -
)- .
;. /
RuleFor 
( 
x 	
=>
 
x 
. 

ScoreTotal 
) 
. 
NotEmpty #
(# $
)$ %
;% &
RuleFor 
( 
x 	
=>
 
x 
. 
	ScoreType 
) 
. 
NotEmpty "
(" #
)# $
;$ %
} 	
}   
}!! ¯
bE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\SellerValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 
class			 
SellerValidator		 
:		  
AbstractValidator		! 2
<		2 3
Seller		3 9
>		9 :
{

 
public 

SellerValidator 
( 
) 
{ 
var 	
sellerService
 
= 
DependencyResolver ,
<, -
ISellerService- ;
>; <
.< =
Resolve= D
(D E
)E F
;F G
RuleFor 
( 
x 
=> 
x 
. 
SellerId 
) 
. 
NotEmpty '
(' (
)( )
;) *
RuleFor 
( 
x 
=> 
x 
. 

UserTypeId 
)  
.  !
NotEmpty! )
() *
)* +
;+ ,
RuleFor 
( 
x 
=> 
x 
. 

SellerName 
)  
.  !
NotEmpty! )
() *
)* +
;+ ,
RuleFor 
( 
x 
=> 
x 
. 
CityId 
) 
. 
NotEmpty %
(% &
)& '
;' (
RuleFor 
( 
x 
=> 
x 
. 

SellerCode 
)  
.  !
NotEmpty! )
() *
)* +
;+ ,
}!! 
}"" 
}## ˙	
dE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\UnitTypeValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
UnitTypeValidator		 !
:		! "
AbstractValidator		" 3
<		3 4
UnitType		4 <
>		< =
{

 
public 
UnitTypeValidator  
(  !
)! "
{ 	
var 
unitTypeService 
= 
DependencyResolver 0
<0 1
IUnitTypeService1 A
>A B
.B C
ResolveC J
(J K
)K L
;L M
RuleFor 
( 
x 
=> 
x 
. 

UnitTypeId %
)% &
.& '
NotEmpty' /
(/ 0
)0 1
;1 2
RuleFor 
( 
x 	
=>
 
x 
. 
UnitTypeName 
) 
. 
NotEmpty %
(% &
)& '
;' (
} 	
} 
}   Ï
dE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\UserRoleValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
UserRoleValidator		 !
:		! "
AbstractValidator		" 3
<		3 4
UserRole		4 <
>		< =
{

 
public 
UserRoleValidator  
(  !
)! "
{ 	
var 
userRoleService 
= 
DependencyResolver 0
<0 1
IUserRoleService1 A
>A B
.B C
ResolveC J
(J K
)K L
;L M
RuleFor 
( 
x 
=> 
x 
. 

UserRoleId %
)% &
.& '
NotEmpty' /
(/ 0
)0 1
;1 2
RuleFor 
( 
x 	
=>
 
x 
. 
RoleId 
) 
. 
NotEmpty 
(  
)  !
;! "
RuleFor 
( 
x 	
=>
 
x 
. 
Role 
) 
. 
NotEmpty 
( 
) 
;  
RuleFor 
( 
x 	
=>
 
x 
. 
User 
) 
. 
NotEmpty 
( 
) 
;  
RuleFor 
( 
x 	
=>
 
x 
. 
UserId 
) 
. 
NotEmpty 
(  
)  !
;! "
}!! 	
}"" 
}## ˙	
dE:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\UserTypeValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 	
class		
 
UserTypeValidator		 !
:		! "
AbstractValidator		" 3
<		3 4
UserType		4 <
>		< =
{

 
public 
UserTypeValidator  
(  !
)! "
{ 	
var 
userTypeService 
= 
DependencyResolver 0
<0 1
IUserTypeService1 A
>A B
.B C
ResolveC J
(J K
)K L
;L M
RuleFor 
( 
x 
=> 
x 
. 

UserTypeId %
)% &
.& '
NotEmpty' /
(/ 0
)0 1
;1 2
RuleFor 
( 
x 	
=>
 
x 
. 
UserTypeName 
) 
. 
NotEmpty %
(% &
)& '
;' (
} 	
} 
}   ≥.
`E:\src\NewGenSource\BayiPuan\BayiPuan.Business\ValidationRules\FluentValidation\UserValidator.cs
	namespace 	
BayiPuan
 
. 
Business 
. 
ValidationRules +
.+ ,
FluentValidation, <
{ 
public		 
class			 
UserValidator		 
:		 
AbstractValidator		 0
<		0 1
User		1 5
>		5 6
{

 
public 

UserValidator 
( 
) 
{ 
var 	
userService
 
= 
DependencyResolver *
<* +
IUserService+ 7
>7 8
.8 9
Resolve9 @
(@ A
)A B
;B C
RuleFor 
( 
x 
=> 
x 
. 

UserTypeId 
)  
.  !
NotEmpty! )
() *
)* +
.+ ,
WithMessage, 7
(7 8
$str8 L
)L M
;M N
RuleFor 
( 
x 
=> 
x 
. 
UserName 
) 
. 
NotEmpty '
(' (
)( )
.) *
WithMessage* 5
(5 6
$str6 J
)J K
;K L
RuleFor 
( 
x 
=> 
x 
. 
Password 
) 
. 
NotEmpty '
(' (
)( )
.) *
WithMessage* 5
(5 6
$str6 J
)J K
;K L
RuleFor 
( 
x 
=> 
x 
. 
	FirstName 
) 
.  
NotEmpty  (
(( )
)) *
.* +
WithMessage+ 6
(6 7
$str7 K
)K L
;L M
RuleFor 
( 
x 
=> 
x 
. 
LastName 
) 
. 
NotEmpty '
(' (
)( )
.) *
WithMessage* 5
(5 6
$str6 J
)J K
;K L
RuleFor 
( 
x 
=> 
x 
. 
Email 
) 
. 
NotEmpty $
($ %
)% &
.& '
WithMessage' 2
(2 3
$str3 G
)G H
;H I
RuleFor 
( 
x 
=> 
x 
. 
MobilePhone  
)  !
.! "
NotEmpty" *
(* +
)+ ,
., -
WithMessage- 8
(8 9
$str9 M
)M N
;N O
RuleFor 
( 
x 
=> 
x 
. 
	UserImage 
) 
.  
NotEmpty  (
(( )
)) *
.* +
WithMessage+ 6
(6 7
$str7 K
)K L
;L M
RuleFor 
( 
x 
=> 
x 
. 
	BirthDate 
) 
.  
NotEmpty  (
(( )
)) *
.* +
WithMessage+ 6
(6 7
$str7 K
)K L
;L M
RuleFor 
( 
x 
=> 
x 
. 
State 
) 
. 
NotEmpty $
($ %
)% &
.& '
WithMessage' 2
(2 3
$str3 G
)G H
;H I
RuleFor 
( 
x 
=> 
x 
. 
SellerId 
) 
. 
NotEmpty '
(' (
)( )
.) *
WithMessage* 5
(5 6
$str6 J
)J K
;K L
RuleFor 
( 
x 
=> 
x 
. 
	Agreement 
) 
.  
NotEmpty  (
(( )
)) *
.* +
WithMessage+ 6
(6 7
$str7 f
)f g
.g h
Equalsh n
(n o
falseo t
)t u
;u v
Custom 
( 
rm 
=> 
{
 
var 
username 
= 
userService &
.& '
UniqueUserName' 5
(5 6
rm6 8
.8 9
UserName9 A
)A B
;B C
if   
(   
username   
!=   
null    
)  A B
{!! 
return"" 
new"" 
ValidationFailure"" *
(""* +
$str""+ 5
,""5 6
$str""7 ]
)""] ^
;""^ _
}## 
return$$ 
null$$ 
;$$ 
}%%
 
)%% 
;%% 
Custom&& 
(&& 
rm&& 
=>&& 
{'' 
var(( 
	useremail(( 
=(( 
userService(( #
.((# $
UniqueEmail(($ /
(((/ 0
rm((0 2
.((2 3
Email((3 8
)((8 9
;((9 :
if)) 

()) 
	useremail)) 
!=)) 
null)) 
))) 
{** 	
return++
 
new++ 
ValidationFailure++ &
(++& '
$str++' .
,++. /
$str++0 R
)++R S
;++S T
},, 	
return-- 
null-- 
;-- 
}.. 
).. 
;.. 	
}00 
}11 
}22 